==================================================
Cycle 1: 
sub $0, $0, $0					#ensure $0 contains zero  address: 0x400'000
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400000    
  Output:
  instruction       0x22        
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x58eed051  
  Data2             0x58eed051  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x22        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x58eed051  
  operand1          0x22        
  control           0x0         
  Output:
  output            0x58eed051  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x58eed051  
  operand1          0x58eed051  
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x0         
  RegWrite          0x1         
  WriteData         0x0         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400000    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400004    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400004    
  operand1          0x88        
  control           0x2         
  Output:
  result            0x40008c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400004    
  operand1          0x40008c    
  control           0x0         
  Output:
  output            0x400004    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400004    
  operand1          0x88        
  control           0x0         
  Output:
  output            0x400004    
==================================================
Cycle 2: 
addi $t0, $ra,  0x0
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400004    
  Output:
  instruction       0x23e80000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10916273  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10916273  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x10000000  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400004    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400008    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400008    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400008    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400008    
  operand1          0x400008    
  control           0x0         
  Output:
  output            0x400008    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400008    
  operand1          0xfa00000   
  control           0x0         
  Output:
  output            0x400008    
==================================================
Cycle 3: 
addi $t1, $0,  11
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400008    
  Output:
  instruction       0x2009000b  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x9de6153f  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0xb         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9de6153f  
  operand1          0xb         
  control           0x1         
  Output:
  output            0xb         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xb         
  control           0x2         
  Output:
  result            0xb         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0xb         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400008    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40000c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40000c    
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x400038    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40000c    
  operand1          0x400038    
  control           0x0         
  Output:
  output            0x40000c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40000c    
  operand1          0x24002c    
  control           0x0         
  Output:
  output            0x40000c    
==================================================
Cycle 4: 
sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40000c    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000000  
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x10000000  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40000c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400010    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400010    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400010    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400010    
  operand1          0x400010    
  control           0x0         
  Output:
  output            0x400010    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400010    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400010    
==================================================
Cycle 5: 
addi $t0, $ra,  0x4       #0x 400'010
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400010    
  Output:
  instruction       0x23e80004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000000  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x10000004  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400010    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400014    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400014    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x400024    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400014    
  operand1          0x400024    
  control           0x0         
  Output:
  output            0x400014    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400014    
  operand1          0xfa00010   
  control           0x0         
  Output:
  output            0x400014    
==================================================
Cycle 6: 
addi $t1, $0,  22
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400014    
  Output:
  instruction       0x20090016  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x16        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x16        
  control           0x1         
  Output:
  output            0x16        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x16        
  control           0x2         
  Output:
  result            0x16        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x16        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x16        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0x16        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400014    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400018    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400018    
  operand1          0x58        
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400018    
  operand1          0x400070    
  control           0x0         
  Output:
  output            0x400018    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400018    
  operand1          0x240058    
  control           0x0         
  Output:
  output            0x400018    
==================================================
Cycle 7: 
sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400018    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000004  
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x10000004  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400018    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40001c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40001c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40001c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40001c    
  operand1          0x40001c    
  control           0x0         
  Output:
  output            0x40001c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40001c    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x40001c    
==================================================
Cycle 8: 
addi $t0, $ra,  0x8
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40001c    
  Output:
  instruction       0x23e80008  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000004  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x8         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000004  
  operand1          0x8         
  control           0x1         
  Output:
  output            0x8         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x8         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x10000008  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40001c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400020    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400020    
  operand1          0x20        
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400020    
  operand1          0x400040    
  control           0x0         
  Output:
  output            0x400020    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400020    
  operand1          0xfa00020   
  control           0x0         
  Output:
  output            0x400020    
==================================================
Cycle 9: 
addi $t1, $0,  33            #0x 400'020
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400020    
  Output:
  instruction       0x20090021  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x21        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x21        
  control           0x1         
  Output:
  output            0x21        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x21        
  control           0x2         
  Output:
  result            0x21        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x21        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0x21        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400020    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400024    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400024    
  operand1          0x84        
  control           0x2         
  Output:
  result            0x4000a8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400024    
  operand1          0x4000a8    
  control           0x0         
  Output:
  output            0x400024    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400024    
  operand1          0x240084    
  control           0x0         
  Output:
  output            0x400024    
==================================================
Cycle 10: 
sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400024    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000008  
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x10000008  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400024    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400028    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400028    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400028    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400028    
  operand1          0x400028    
  control           0x0         
  Output:
  output            0x400028    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400028    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400028    
==================================================
Cycle 11: 
addi $t0, $ra,  0xc
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400028    
  Output:
  instruction       0x23e8000c  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000008  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0xc         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000008  
  operand1          0xc         
  control           0x1         
  Output:
  output            0xc         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0xc         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x1000000c  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400028    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40002c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40002c    
  operand1          0x30        
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40002c    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x40002c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40002c    
  operand1          0xfa00030   
  control           0x0         
  Output:
  output            0x40002c    
==================================================
Cycle 12: 
addi $t1, $0,  44
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40002c    
  Output:
  instruction       0x2009002c  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x2c        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x2c        
  control           0x1         
  Output:
  output            0x2c        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x2c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2c        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0x2c        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40002c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400030    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400030    
  operand1          0xb0        
  control           0x2         
  Output:
  result            0x4000e0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400030    
  operand1          0x4000e0    
  control           0x0         
  Output:
  output            0x400030    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400030    
  operand1          0x2400b0    
  control           0x0         
  Output:
  output            0x400030    
==================================================
Cycle 13: 
sw $t1, 0($t0)                 #0x 400'030
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400030    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x1000000c  
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x1000000c  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400030    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400034    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400034    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400034    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400034    
  operand1          0x400034    
  control           0x0         
  Output:
  output            0x400034    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400034    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400034    
==================================================
Cycle 14: 
addi $t0, $ra,  0x10
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400034    
  Output:
  instruction       0x23e80010  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x1000000c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x10        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000000c  
  operand1          0x10        
  control           0x1         
  Output:
  output            0x10        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x10        
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x10000010  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400034    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400038    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400038    
  operand1          0x40        
  control           0x2         
  Output:
  result            0x400078    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400038    
  operand1          0x400078    
  control           0x0         
  Output:
  output            0x400038    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400038    
  operand1          0xfa00040   
  control           0x0         
  Output:
  output            0x400038    
==================================================
Cycle 15: 
addi $t1, $0,  55
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400038    
  Output:
  instruction       0x20090037  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x37        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x37        
  control           0x1         
  Output:
  output            0x37        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x37        
  control           0x2         
  Output:
  result            0x37        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x37        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x37        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0x37        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400038    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40003c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40003c    
  operand1          0xdc        
  control           0x2         
  Output:
  result            0x400118    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40003c    
  operand1          0x400118    
  control           0x0         
  Output:
  output            0x40003c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40003c    
  operand1          0x2400dc    
  control           0x0         
  Output:
  output            0x40003c    
==================================================
Cycle 16: 
sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40003c    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000010  
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x10000010  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40003c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400040    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400040    
  operand1          0x400040    
  control           0x0         
  Output:
  output            0x400040    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400040    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400040    
==================================================
Cycle 17: 
addi $t0, $ra,  0x14		#store length variable, address 0x400'040
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400040    
  Output:
  instruction       0x23e80014  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000010  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x14        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000010  
  operand1          0x14        
  control           0x1         
  Output:
  output            0x14        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x14        
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x10000014  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400040    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400044    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400044    
  operand1          0x50        
  control           0x2         
  Output:
  result            0x400094    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400044    
  operand1          0x400094    
  control           0x0         
  Output:
  output            0x400044    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400044    
  operand1          0xfa00050   
  control           0x0         
  Output:
  output            0x400044    
==================================================
Cycle 18: 
addi $t1, $0,  5
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400044    
  Output:
  instruction       0x20090005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x5         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x5         
  control           0x1         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x5         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x1         
  WriteData         0x5         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400044    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400048    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400048    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400048    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x400048    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400048    
  operand1          0x240014    
  control           0x0         
  Output:
  output            0x400048    
==================================================
Cycle 19: 
sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400048    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000014  
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x9         
  RegWrite          0x0         
  WriteData         0x10000014  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400048    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40004c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40004c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40004c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40004c    
  operand1          0x40004c    
  control           0x0         
  Output:
  output            0x40004c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40004c    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x40004c    
==================================================
Cycle 20: 
addi $t0, $0, 0					#loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40004c    
  Output:
  instruction       0x20080000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x8         
  Output:
  Data1             0x0         
  Data2             0x10000014  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x0         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40004c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400050    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400050    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400050    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400050    
  operand1          0x400050    
  control           0x0         
  Output:
  output            0x400050    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400050    
  operand1          0x200000    
  control           0x0         
  Output:
  output            0x400050    
==================================================
Cycle 21: 
addi $t2, $0, 0					#total             #0x 400'050
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400050    
  Output:
  instruction       0x200a0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0xa         
  Output:
  Data1             0x0         
  Data2             0x81fb7b82  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xa         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81fb7b82  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0x0         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400050    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400054    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400054    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400054    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400054    
  operand1          0x400054    
  control           0x0         
  Output:
  output            0x400054    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400054    
  operand1          0x280000    
  control           0x0         
  Output:
  output            0x400054    
==================================================
Cycle 22: 
addi $t3, $ra, 0x0		#starting address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400054    
  Output:
  instruction       0x23eb0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0xb         
  Output:
  Data1             0x10000000  
  Data2             0xce7d0a9b  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xce7d0a9b  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x10000000  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400054    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400058    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400058    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400058    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400058    
  operand1          0x400058    
  control           0x0         
  Output:
  output            0x400058    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400058    
  operand1          0xfac0000   
  control           0x0         
  Output:
  output            0x400058    
==================================================
Cycle 23: 
addi $t5, $t1, 0					#store length in $t5
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400058    
  Output:
  instruction       0x212d0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x9         
  Reg2              0xd         
  Output:
  Data1             0x5         
  Data2             0xddc6522   
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xddc6522   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x1         
  WriteData         0x5         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400058    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40005c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40005c    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x40005c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40005c    
  operand1          0x4b40000   
  control           0x0         
  Output:
  output            0x40005c    
==================================================
Cycle 24: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x0         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xfffffffb  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfffffffb  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfffffffb  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfffffffb  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0xfffffffb  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400060    
==================================================
Cycle 25: 
lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000000  
  Data2             0x9cb2a11c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9cb2a11c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xb         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0xb         
  control           0x1         
  Output:
  output            0xb         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xc         
  RegWrite          0x1         
  WriteData         0xb         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
==================================================
Cycle 26: 
add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x0         
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xb         
  control           0x2         
  Output:
  result            0xb         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0xb         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
==================================================
Cycle 27: 
addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000000  
  Data2             0x10000000  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x10000004  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
==================================================
Cycle 28: 
addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x1         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
==================================================
Cycle 29: 
j 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x8100017   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x10        
  Output:
  Data1             0x0         
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x2         
  Output:
  RegDst            0x0         
  Jump              0x1         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x17        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x17        
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0xaaa29086  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaaa29086  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x10        
  RegWrite          0x0         
  WriteData         0xaaa29086  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0x5c        
  control           0x2         
  Output:
  result            0x4000d0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x4000d0    
  control           0x0         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x40005c    
  control           0x1         
  Output:
  output            0x40005c    
==================================================
Cycle 30: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x1         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xfffffffc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfffffffc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfffffffc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfffffffc  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0xfffffffc  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400060    
==================================================
Cycle 31: 
lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000004  
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x16        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x16        
  control           0x1         
  Output:
  output            0x16        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xc         
  RegWrite          0x1         
  WriteData         0x16        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
==================================================
Cycle 32: 
add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xb         
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x16        
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb         
  operand1          0x16        
  control           0x2         
  Output:
  result            0x21        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x21        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0x21        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
==================================================
Cycle 33: 
addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000004  
  Data2             0x10000004  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000004  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x10000008  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
==================================================
Cycle 34: 
addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1         
  Data2             0x1         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x2         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
==================================================
Cycle 35: 
j 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x8100017   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x10        
  Output:
  Data1             0x0         
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x2         
  Output:
  RegDst            0x0         
  Jump              0x1         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x17        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x17        
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0xaaa29086  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaaa29086  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x10        
  RegWrite          0x0         
  WriteData         0xaaa29086  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0x5c        
  control           0x2         
  Output:
  result            0x4000d0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x4000d0    
  control           0x0         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x40005c    
  control           0x1         
  Output:
  output            0x40005c    
==================================================
Cycle 36: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x2         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xfffffffd  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfffffffd  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfffffffd  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfffffffd  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0xfffffffd  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400060    
==================================================
Cycle 37: 
lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000008  
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x21        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x21        
  control           0x1         
  Output:
  output            0x21        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xc         
  RegWrite          0x1         
  WriteData         0x21        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
==================================================
Cycle 38: 
add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x21        
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x21        
  operand1          0x21        
  control           0x2         
  Output:
  result            0x42        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x42        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x42        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x42        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0x42        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
==================================================
Cycle 39: 
addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000008  
  Data2             0x10000008  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000008  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x1000000c  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
==================================================
Cycle 40: 
addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2         
  Data2             0x2         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x3         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
==================================================
Cycle 41: 
j 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x8100017   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x10        
  Output:
  Data1             0x0         
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x2         
  Output:
  RegDst            0x0         
  Jump              0x1         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x17        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x17        
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0xaaa29086  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaaa29086  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x10        
  RegWrite          0x0         
  WriteData         0xaaa29086  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0x5c        
  control           0x2         
  Output:
  result            0x4000d0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x4000d0    
  control           0x0         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x40005c    
  control           0x1         
  Output:
  output            0x40005c    
==================================================
Cycle 42: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x3         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xfffffffe  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfffffffe  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfffffffe  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfffffffe  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0xfffffffe  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400060    
==================================================
Cycle 43: 
lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000000c  
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x2c        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x2c        
  control           0x1         
  Output:
  output            0x2c        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xc         
  RegWrite          0x1         
  WriteData         0x2c        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
==================================================
Cycle 44: 
add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x42        
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x2c        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x42        
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x6e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6e        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0x6e        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
==================================================
Cycle 45: 
addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000000c  
  Data2             0x1000000c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000000c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x10000010  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
==================================================
Cycle 46: 
addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3         
  Data2             0x3         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x4         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
==================================================
Cycle 47: 
j 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x8100017   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x10        
  Output:
  Data1             0x0         
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x2         
  Output:
  RegDst            0x0         
  Jump              0x1         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x17        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x17        
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0xaaa29086  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaaa29086  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x10        
  RegWrite          0x0         
  WriteData         0xaaa29086  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0x5c        
  control           0x2         
  Output:
  result            0x4000d0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x4000d0    
  control           0x0         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x40005c    
  control           0x1         
  Output:
  output            0x40005c    
==================================================
Cycle 48: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x4         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xffffffff  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xffffffff  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xffffffff  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xffffffff  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0xffffffff  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400060    
==================================================
Cycle 49: 
lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000010  
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x37        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x37        
  control           0x1         
  Output:
  output            0x37        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xc         
  RegWrite          0x1         
  WriteData         0x37        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
==================================================
Cycle 50: 
add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6e        
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x37        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6e        
  operand1          0x37        
  control           0x2         
  Output:
  result            0xa5        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa5        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa5        
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa5        
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xa         
  RegWrite          0x1         
  WriteData         0xa5        
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
==================================================
Cycle 51: 
addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000010  
  Data2             0x10000010  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000010  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xb         
  RegWrite          0x1         
  WriteData         0x10000014  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
==================================================
Cycle 52: 
addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4         
  Data2             0x4         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x8         
  RegWrite          0x1         
  WriteData         0x5         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
==================================================
Cycle 53: 
j 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x8100017   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x10        
  Output:
  Data1             0x0         
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x2         
  Output:
  RegDst            0x0         
  Jump              0x1         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x17        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x17        
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0xaaa29086  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaaa29086  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0x10        
  RegWrite          0x0         
  WriteData         0xaaa29086  
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0x5c        
  control           0x2         
  Output:
  result            0x4000d0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x4000d0    
  control           0x0         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x40005c    
  control           0x1         
  Output:
  output            0x40005c    
==================================================
Cycle 54: 
beq $t0, $t5, 0x14    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x5         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x5         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5         
  operand1          0x5         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
Register File Write
  Input:
  WriteReg          0xd         
  RegWrite          0x0         
  WriteData         0x0         
  Output:
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400074    
  control           0x1         
  Output:
  output            0x400074    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400074    
  operand1          0x4340014   
  control           0x0         
  Output:
  output            0x400074    
