====================================================================
Cycle 1
  sub $0, $0, $0					#ensure $0 contains zero  address: 0x400'000
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400000    
  Output:
  instruction       0x22        
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x58eed051  
  Data2             0x58eed051  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x22        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x58eed051  
  operand1          0x22        
  control           0x0         
  Output:
  output            0x58eed051  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x58eed051  
  operand1          0x58eed051  
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400000    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400004    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400004    
  operand1          0x88        
  control           0x2         
  Output:
  result            0x40008c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400004    
  operand1          0x40008c    
  control           0x0         
  Output:
  output            0x400004    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400004    
  operand1          0x88        
  control           0x0         
  Output:
  output            0x400004    
====================================================================
Cycle 2
  addi $t0, $ra,  0x0
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400004    
  Output:
  instruction       0x23e80000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10916273  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10916273  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400004    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400008    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400008    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400008    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400008    
  operand1          0x400008    
  control           0x0         
  Output:
  output            0x400008    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400008    
  operand1          0xfa00000   
  control           0x0         
  Output:
  output            0x400008    
====================================================================
Cycle 3
  addi $t1, $0,  11
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400008    
  Output:
  instruction       0x2009000b  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x9de6153f  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0xb         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9de6153f  
  operand1          0xb         
  control           0x1         
  Output:
  output            0xb         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xb         
  control           0x2         
  Output:
  result            0xb         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400008    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40000c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40000c    
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x400038    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40000c    
  operand1          0x400038    
  control           0x0         
  Output:
  output            0x40000c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40000c    
  operand1          0x24002c    
  control           0x0         
  Output:
  output            0x40000c    
====================================================================
Cycle 4
  sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40000c    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000000  
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40000c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400010    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400010    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400010    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400010    
  operand1          0x400010    
  control           0x0         
  Output:
  output            0x400010    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400010    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400010    
====================================================================
Cycle 5
  addi $t0, $ra,  0x4       #0x 400'010
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400010    
  Output:
  instruction       0x23e80004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000000  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400010    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400014    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400014    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x400024    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400014    
  operand1          0x400024    
  control           0x0         
  Output:
  output            0x400014    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400014    
  operand1          0xfa00010   
  control           0x0         
  Output:
  output            0x400014    
====================================================================
Cycle 6
  addi $t1, $0,  22
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400014    
  Output:
  instruction       0x20090016  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x16        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x16        
  control           0x1         
  Output:
  output            0x16        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x16        
  control           0x2         
  Output:
  result            0x16        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x16        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x16        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400014    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400018    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400018    
  operand1          0x58        
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400018    
  operand1          0x400070    
  control           0x0         
  Output:
  output            0x400018    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400018    
  operand1          0x240058    
  control           0x0         
  Output:
  output            0x400018    
====================================================================
Cycle 7
  sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400018    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000004  
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400018    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40001c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40001c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40001c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40001c    
  operand1          0x40001c    
  control           0x0         
  Output:
  output            0x40001c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40001c    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x40001c    
====================================================================
Cycle 8
  addi $t0, $ra,  0x8
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40001c    
  Output:
  instruction       0x23e80008  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000004  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x8         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000004  
  operand1          0x8         
  control           0x1         
  Output:
  output            0x8         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x8         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40001c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400020    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400020    
  operand1          0x20        
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400020    
  operand1          0x400040    
  control           0x0         
  Output:
  output            0x400020    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400020    
  operand1          0xfa00020   
  control           0x0         
  Output:
  output            0x400020    
====================================================================
Cycle 9
  addi $t1, $0,  33            #0x 400'020
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400020    
  Output:
  instruction       0x20090021  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x21        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x21        
  control           0x1         
  Output:
  output            0x21        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x21        
  control           0x2         
  Output:
  result            0x21        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x21        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400020    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400024    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400024    
  operand1          0x84        
  control           0x2         
  Output:
  result            0x4000a8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400024    
  operand1          0x4000a8    
  control           0x0         
  Output:
  output            0x400024    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400024    
  operand1          0x240084    
  control           0x0         
  Output:
  output            0x400024    
====================================================================
Cycle 10
  sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400024    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000008  
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400024    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400028    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400028    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400028    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400028    
  operand1          0x400028    
  control           0x0         
  Output:
  output            0x400028    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400028    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400028    
====================================================================
Cycle 11
  addi $t0, $ra,  0xc
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400028    
  Output:
  instruction       0x23e8000c  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000008  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0xc         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000008  
  operand1          0xc         
  control           0x1         
  Output:
  output            0xc         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0xc         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400028    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40002c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40002c    
  operand1          0x30        
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40002c    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x40002c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40002c    
  operand1          0xfa00030   
  control           0x0         
  Output:
  output            0x40002c    
====================================================================
Cycle 12
  addi $t1, $0,  44
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40002c    
  Output:
  instruction       0x2009002c  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x2c        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x2c        
  control           0x1         
  Output:
  output            0x2c        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x2c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40002c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400030    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400030    
  operand1          0xb0        
  control           0x2         
  Output:
  result            0x4000e0    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400030    
  operand1          0x4000e0    
  control           0x0         
  Output:
  output            0x400030    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400030    
  operand1          0x2400b0    
  control           0x0         
  Output:
  output            0x400030    
====================================================================
Cycle 13
  sw $t1, 0($t0)                 #0x 400'030
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400030    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x1000000c  
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400030    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400034    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400034    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400034    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400034    
  operand1          0x400034    
  control           0x0         
  Output:
  output            0x400034    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400034    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400034    
====================================================================
Cycle 14
  addi $t0, $ra,  0x10
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400034    
  Output:
  instruction       0x23e80010  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x1000000c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x10        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000000c  
  operand1          0x10        
  control           0x1         
  Output:
  output            0x10        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x10        
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400034    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400038    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400038    
  operand1          0x40        
  control           0x2         
  Output:
  result            0x400078    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400038    
  operand1          0x400078    
  control           0x0         
  Output:
  output            0x400038    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400038    
  operand1          0xfa00040   
  control           0x0         
  Output:
  output            0x400038    
====================================================================
Cycle 15
  addi $t1, $0,  55
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400038    
  Output:
  instruction       0x20090037  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x37        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x37        
  control           0x1         
  Output:
  output            0x37        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x37        
  control           0x2         
  Output:
  result            0x37        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x37        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x37        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400038    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40003c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40003c    
  operand1          0xdc        
  control           0x2         
  Output:
  result            0x400118    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40003c    
  operand1          0x400118    
  control           0x0         
  Output:
  output            0x40003c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40003c    
  operand1          0x2400dc    
  control           0x0         
  Output:
  output            0x40003c    
====================================================================
Cycle 16
  sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40003c    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000010  
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40003c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400040    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400040    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400040    
  operand1          0x400040    
  control           0x0         
  Output:
  output            0x400040    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400040    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x400040    
====================================================================
Cycle 17
  addi $t0, $ra,  0x14		#store length variable, address 0x400'040
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400040    
  Output:
  instruction       0x23e80014  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0x8         
  Output:
  Data1             0x10000000  
  Data2             0x10000010  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x14        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000010  
  operand1          0x14        
  control           0x1         
  Output:
  output            0x14        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x14        
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400040    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400044    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400044    
  operand1          0x50        
  control           0x2         
  Output:
  result            0x400094    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400044    
  operand1          0x400094    
  control           0x0         
  Output:
  output            0x400044    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400044    
  operand1          0xfa00050   
  control           0x0         
  Output:
  output            0x400044    
====================================================================
Cycle 18
  addi $t1, $0,  5
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400044    
  Output:
  instruction       0x20090005  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x9         
  Output:
  Data1             0x0         
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x5         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x5         
  control           0x1         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x5         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400044    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400048    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400048    
  operand1          0x14        
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400048    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x400048    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400048    
  operand1          0x240014    
  control           0x0         
  Output:
  output            0x400048    
====================================================================
Cycle 19
  sw $t1, 0($t0)
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400048    
  Output:
  instruction       0xad090000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x9         
  Output:
  Data1             0x10000014  
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x2b        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x1         
  ALUSrc            0x1         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x1         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400048    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40004c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40004c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40004c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40004c    
  operand1          0x40004c    
  control           0x0         
  Output:
  output            0x40004c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40004c    
  operand1          0x4240000   
  control           0x0         
  Output:
  output            0x40004c    
====================================================================
Cycle 20
  addi $t0, $0, 0					#loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40004c    
  Output:
  instruction       0x20080000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x8         
  Output:
  Data1             0x0         
  Data2             0x10000014  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40004c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400050    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400050    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400050    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400050    
  operand1          0x400050    
  control           0x0         
  Output:
  output            0x400050    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400050    
  operand1          0x200000    
  control           0x0         
  Output:
  output            0x400050    
====================================================================
Cycle 21
  addi $t2, $0, 0					#total             #0x 400'050
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400050    
  Output:
  instruction       0x200a0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0xa         
  Output:
  Data1             0x0         
  Data2             0x81fb7b82  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xa         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81fb7b82  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400050    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400054    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400054    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400054    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400054    
  operand1          0x400054    
  control           0x0         
  Output:
  output            0x400054    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400054    
  operand1          0x280000    
  control           0x0         
  Output:
  output            0x400054    
====================================================================
Cycle 22
  addi $t3, $ra, 0x0		#starting address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400054    
  Output:
  instruction       0x23eb0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x1f        
  Reg2              0xb         
  Output:
  Data1             0x10000000  
  Data2             0xce7d0a9b  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xce7d0a9b  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000000  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400054    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400058    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400058    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400058    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400058    
  operand1          0x400058    
  control           0x0         
  Output:
  output            0x400058    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400058    
  operand1          0xfac0000   
  control           0x0         
  Output:
  output            0x400058    
====================================================================
Cycle 23
  addi $t5, $t1, 0					#store length in $t5
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400058    
  Output:
  instruction       0x212d0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x9         
  Reg2              0xd         
  Output:
  Data1             0x5         
  Data2             0xddc6522   
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xddc6522   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400058    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40005c    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x40005c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40005c    
  operand1          0x40005c    
  control           0x0         
  Output:
  output            0x40005c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40005c    
  operand1          0x4b40000   
  control           0x0         
  Output:
  output            0x40005c    
====================================================================
Cycle 24
  	beq $t0, $t5, 0x400074    # branch to done
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40005c    
  Output:
  instruction       0x110d0006  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0xd         
  Output:
  Data1             0x0         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x6         
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x6         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x5         
  control           0x6         
  Output:
  result            0xfffffffb  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfffffffb  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfffffffb  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfffffffb  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40005c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400060    
  operand1          0x18        
  control           0x2         
  Output:
  result            0x400078    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400060    
  operand1          0x400078    
  control           0x0         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x4340018   
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 25
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000000  
  Data2             0x9cb2a11c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9cb2a11c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000000  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000000  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xb         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000000  
  operand1          0xb         
  control           0x1         
  Output:
  output            0xb         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 26
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x0         
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0xb         
  control           0x2         
  Output:
  result            0xb         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 27
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000000  
  Data2             0x10000000  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000000  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000004  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 28
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 29
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 30
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000004  
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000004  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000004  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x16        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000004  
  operand1          0x16        
  control           0x1         
  Output:
  output            0x16        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 31
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xb         
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x16        
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb         
  operand1          0x16        
  control           0x2         
  Output:
  result            0x21        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x21        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 32
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000004  
  Data2             0x10000004  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000004  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000004  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000008  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 33
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1         
  Data2             0x1         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 34
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 35
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000008  
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000008  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000008  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x21        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000008  
  operand1          0x21        
  control           0x1         
  Output:
  output            0x21        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 36
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x21        
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x21        
  operand1          0x21        
  control           0x2         
  Output:
  result            0x42        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x42        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x42        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x42        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 37
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000008  
  Data2             0x10000008  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000008  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000008  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000000c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 38
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2         
  Data2             0x2         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 39
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 40
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000000c  
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000000c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000000c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x2c        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000000c  
  operand1          0x2c        
  control           0x1         
  Output:
  output            0x2c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 41
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x42        
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x2c        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x42        
  operand1          0x2c        
  control           0x2         
  Output:
  result            0x6e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 42
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000000c  
  Data2             0x1000000c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000000c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000000c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000010  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 43
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3         
  Data2             0x3         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 44
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 45
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000010  
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000010  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000010  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x37        
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000010  
  operand1          0x37        
  control           0x1         
  Output:
  output            0x37        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 46
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6e        
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x37        
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6e        
  operand1          0x37        
  control           0x2         
  Output:
  result            0xa5        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa5        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa5        
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa5        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 47
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000010  
  Data2             0x10000010  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000010  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000010  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000014  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 48
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4         
  Data2             0x4         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 49
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 50
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000014  
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000014  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000014  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000014  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x5         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000014  
  operand1          0x5         
  control           0x1         
  Output:
  output            0x5         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 51
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa5        
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x5         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa5        
  operand1          0x5         
  control           0x2         
  Output:
  result            0xaa        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaa        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaa        
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaa        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 52
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000014  
  Data2             0x10000014  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000014  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000014  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000018  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000018  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000018  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000018  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 53
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5         
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x6         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 54
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 55
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000018  
  Data2             0x5         
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5         
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000018  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000018  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000018  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xb90037d6  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000018  
  operand1          0xb90037d6  
  control           0x1         
  Output:
  output            0xb90037d6  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 56
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xaa        
  Data2             0xb90037d6  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb90037d6  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xb90037d6  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xaa        
  operand1          0xb90037d6  
  control           0x2         
  Output:
  result            0xb9003880  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb9003880  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb9003880  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb9003880  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 57
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000018  
  Data2             0x10000018  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000018  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000018  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000001c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000001c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000001c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000001c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 58
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x6         
  Data2             0x6         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x7         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x7         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x7         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x7         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 59
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 60
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000001c  
  Data2             0xb90037d6  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb90037d6  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000001c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000001c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000001c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x63322818  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000001c  
  operand1          0x63322818  
  control           0x1         
  Output:
  output            0x63322818  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 61
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xb9003880  
  Data2             0x63322818  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x63322818  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x63322818  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb9003880  
  operand1          0x63322818  
  control           0x2         
  Output:
  result            0x1c326098  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1c326098  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1c326098  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1c326098  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 62
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000001c  
  Data2             0x1000001c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000001c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000001c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000020  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000020  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000020  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000020  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 63
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x7         
  Data2             0x7         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x7         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x7         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x8         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x8         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 64
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 65
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000020  
  Data2             0x63322818  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x63322818  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000020  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000020  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000020  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x10916273  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000020  
  operand1          0x10916273  
  control           0x1         
  Output:
  output            0x10916273  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 66
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x1c326098  
  Data2             0x10916273  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10916273  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x10916273  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1c326098  
  operand1          0x10916273  
  control           0x2         
  Output:
  result            0x2cc3c30b  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2cc3c30b  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2cc3c30b  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2cc3c30b  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 67
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000020  
  Data2             0x10000020  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000020  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000020  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000024  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000024  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000024  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000024  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 68
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x8         
  Data2             0x8         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x8         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x9         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x9         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x9         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 69
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 70
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000024  
  Data2             0x10916273  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10916273  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000024  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000024  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000024  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x9de6153f  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000024  
  operand1          0x9de6153f  
  control           0x1         
  Output:
  output            0x9de6153f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 71
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x2cc3c30b  
  Data2             0x9de6153f  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9de6153f  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x9de6153f  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2cc3c30b  
  operand1          0x9de6153f  
  control           0x2         
  Output:
  result            0xcaa9d84a  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xcaa9d84a  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xcaa9d84a  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xcaa9d84a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 72
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000024  
  Data2             0x10000024  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000024  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000024  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000028  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000028  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000028  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000028  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 73
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x9         
  Data2             0x9         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x9         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xa         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 74
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 75
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000028  
  Data2             0x9de6153f  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9de6153f  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000028  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000028  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000028  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x81fb7b82  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000028  
  operand1          0x81fb7b82  
  control           0x1         
  Output:
  output            0x81fb7b82  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 76
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xcaa9d84a  
  Data2             0x81fb7b82  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81fb7b82  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x81fb7b82  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xcaa9d84a  
  operand1          0x81fb7b82  
  control           0x2         
  Output:
  result            0x4ca553cc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4ca553cc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4ca553cc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4ca553cc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 77
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000028  
  Data2             0x10000028  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000028  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000028  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000002c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000002c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000002c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000002c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 78
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xa         
  Data2             0xa         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xb         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 79
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 80
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000002c  
  Data2             0x81fb7b82  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81fb7b82  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000002c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000002c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000002c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xce7d0a9b  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000002c  
  operand1          0xce7d0a9b  
  control           0x1         
  Output:
  output            0xce7d0a9b  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 81
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x4ca553cc  
  Data2             0xce7d0a9b  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xce7d0a9b  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xce7d0a9b  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4ca553cc  
  operand1          0xce7d0a9b  
  control           0x2         
  Output:
  result            0x1b225e67  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1b225e67  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1b225e67  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1b225e67  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 82
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000002c  
  Data2             0x1000002c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000002c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000002c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000030  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000030  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000030  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000030  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 83
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xb         
  Data2             0xb         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xc         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 84
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 85
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000030  
  Data2             0xce7d0a9b  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xce7d0a9b  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000030  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000030  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000030  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x9cb2a11c  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000030  
  operand1          0x9cb2a11c  
  control           0x1         
  Output:
  output            0x9cb2a11c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 86
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x1b225e67  
  Data2             0x9cb2a11c  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9cb2a11c  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x9cb2a11c  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1b225e67  
  operand1          0x9cb2a11c  
  control           0x2         
  Output:
  result            0xb7d4ff83  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb7d4ff83  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb7d4ff83  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb7d4ff83  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 87
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000030  
  Data2             0x10000030  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000030  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000030  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000034  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000034  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000034  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000034  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 88
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xc         
  Data2             0xc         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xc         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xd         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 89
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 90
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000034  
  Data2             0x9cb2a11c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9cb2a11c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000034  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000034  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000034  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xddc6522   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000034  
  operand1          0xddc6522   
  control           0x1         
  Output:
  output            0xddc6522   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 91
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xb7d4ff83  
  Data2             0xddc6522   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xddc6522   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xddc6522   
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb7d4ff83  
  operand1          0xddc6522   
  control           0x2         
  Output:
  result            0xc5b164a5  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc5b164a5  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc5b164a5  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc5b164a5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 92
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000034  
  Data2             0x10000034  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000034  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000034  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000038  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000038  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000038  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000038  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 93
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xd         
  Data2             0xd         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xe         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xe         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xe         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xe         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 94
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 95
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000038  
  Data2             0xddc6522   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xddc6522   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000038  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000038  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000038  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x604ca9a9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000038  
  operand1          0x604ca9a9  
  control           0x1         
  Output:
  output            0x604ca9a9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 96
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xc5b164a5  
  Data2             0x604ca9a9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x604ca9a9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x604ca9a9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc5b164a5  
  operand1          0x604ca9a9  
  control           0x2         
  Output:
  result            0x25fe0e4e  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x25fe0e4e  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x25fe0e4e  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x25fe0e4e  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 97
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000038  
  Data2             0x10000038  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000038  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000038  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000003c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000003c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000003c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000003c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 98
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xe         
  Data2             0xe         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xe         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xe         
  operand1          0x1         
  control           0x2         
  Output:
  result            0xf         
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 99
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 100
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000003c  
  Data2             0x604ca9a9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x604ca9a9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000003c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000003c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000003c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x488a6409  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000003c  
  operand1          0x488a6409  
  control           0x1         
  Output:
  output            0x488a6409  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 101
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x25fe0e4e  
  Data2             0x488a6409  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x488a6409  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x488a6409  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x25fe0e4e  
  operand1          0x488a6409  
  control           0x2         
  Output:
  result            0x6e887257  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6e887257  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6e887257  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6e887257  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 102
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000003c  
  Data2             0x1000003c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000003c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000003c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000040  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000040  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000040  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000040  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 103
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0xf         
  Data2             0xf         
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf         
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf         
  operand1          0x1         
  control           0x2         
  Output:
  result            0x10        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 104
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 105
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000040  
  Data2             0x488a6409  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x488a6409  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000040  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000040  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000040  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xaaa29086  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000040  
  operand1          0xaaa29086  
  control           0x1         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 106
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6e887257  
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xaaa29086  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6e887257  
  operand1          0xaaa29086  
  control           0x2         
  Output:
  result            0x192b02dd  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x192b02dd  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x192b02dd  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x192b02dd  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 107
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000040  
  Data2             0x10000040  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000040  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000040  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000044  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000044  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000044  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000044  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 108
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x10        
  Data2             0x10        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x11        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x11        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x11        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x11        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 109
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 110
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000044  
  Data2             0xaaa29086  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaaa29086  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000044  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000044  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000044  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x95ddcf94  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000044  
  operand1          0x95ddcf94  
  control           0x1         
  Output:
  output            0x95ddcf94  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 111
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x192b02dd  
  Data2             0x95ddcf94  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x95ddcf94  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x95ddcf94  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x192b02dd  
  operand1          0x95ddcf94  
  control           0x2         
  Output:
  result            0xaf08d271  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xaf08d271  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xaf08d271  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xaf08d271  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 112
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000044  
  Data2             0x10000044  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000044  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000044  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000048  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000048  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000048  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000048  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 113
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x11        
  Data2             0x11        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x11        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x11        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x12        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x12        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x12        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x12        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 114
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 115
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000048  
  Data2             0x95ddcf94  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x95ddcf94  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000048  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000048  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000048  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x61d998ef  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000048  
  operand1          0x61d998ef  
  control           0x1         
  Output:
  output            0x61d998ef  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 116
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xaf08d271  
  Data2             0x61d998ef  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x61d998ef  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x61d998ef  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xaf08d271  
  operand1          0x61d998ef  
  control           0x2         
  Output:
  result            0x10e26b60  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10e26b60  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10e26b60  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10e26b60  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 117
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000048  
  Data2             0x10000048  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000048  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000048  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000004c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000004c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000004c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000004c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 118
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x12        
  Data2             0x12        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x12        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x12        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x13        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x13        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x13        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x13        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 119
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 120
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000004c  
  Data2             0x61d998ef  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x61d998ef  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000004c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000004c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000004c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8e9a6c56  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000004c  
  operand1          0x8e9a6c56  
  control           0x1         
  Output:
  output            0x8e9a6c56  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 121
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x10e26b60  
  Data2             0x8e9a6c56  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8e9a6c56  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8e9a6c56  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10e26b60  
  operand1          0x8e9a6c56  
  control           0x2         
  Output:
  result            0x9f7cd7b6  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x9f7cd7b6  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x9f7cd7b6  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9f7cd7b6  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 122
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000004c  
  Data2             0x1000004c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000004c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000004c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000050  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000050  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000050  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000050  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 123
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x13        
  Data2             0x13        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x13        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x13        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x14        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x14        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x14        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x14        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 124
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 125
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000050  
  Data2             0x8e9a6c56  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8e9a6c56  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000050  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000050  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000050  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x5a3e780f  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000050  
  operand1          0x5a3e780f  
  control           0x1         
  Output:
  output            0x5a3e780f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 126
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x9f7cd7b6  
  Data2             0x5a3e780f  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5a3e780f  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x5a3e780f  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x9f7cd7b6  
  operand1          0x5a3e780f  
  control           0x2         
  Output:
  result            0xf9bb4fc5  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf9bb4fc5  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf9bb4fc5  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf9bb4fc5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 127
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000050  
  Data2             0x10000050  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000050  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000050  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000054  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000054  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000054  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000054  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 128
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x14        
  Data2             0x14        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x14        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x14        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x15        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x15        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x15        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x15        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 129
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 130
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000054  
  Data2             0x5a3e780f  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5a3e780f  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000054  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000054  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000054  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xdaa25db0  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000054  
  operand1          0xdaa25db0  
  control           0x1         
  Output:
  output            0xdaa25db0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 131
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf9bb4fc5  
  Data2             0xdaa25db0  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdaa25db0  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xdaa25db0  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf9bb4fc5  
  operand1          0xdaa25db0  
  control           0x2         
  Output:
  result            0xd45dad75  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd45dad75  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd45dad75  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd45dad75  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 132
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000054  
  Data2             0x10000054  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000054  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000054  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000058  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000058  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000058  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000058  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 133
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x15        
  Data2             0x15        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x15        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x15        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x16        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x16        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x16        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x16        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 134
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 135
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000058  
  Data2             0xdaa25db0  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdaa25db0  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000058  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000058  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000058  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xa031e83   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000058  
  operand1          0xa031e83   
  control           0x1         
  Output:
  output            0xa031e83   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 136
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xd45dad75  
  Data2             0xa031e83   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa031e83   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xa031e83   
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd45dad75  
  operand1          0xa031e83   
  control           0x2         
  Output:
  result            0xde60cbf8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xde60cbf8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xde60cbf8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xde60cbf8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 137
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000058  
  Data2             0x10000058  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000058  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000058  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000005c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000005c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000005c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000005c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 138
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x16        
  Data2             0x16        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x16        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x16        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x17        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x17        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x17        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x17        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 139
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 140
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000005c  
  Data2             0xa031e83   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa031e83   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000005c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000005c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000005c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x750773f2  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000005c  
  operand1          0x750773f2  
  control           0x1         
  Output:
  output            0x750773f2  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 141
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xde60cbf8  
  Data2             0x750773f2  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x750773f2  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x750773f2  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xde60cbf8  
  operand1          0x750773f2  
  control           0x2         
  Output:
  result            0x53683fea  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x53683fea  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x53683fea  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x53683fea  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 142
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000005c  
  Data2             0x1000005c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000005c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000005c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000060  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000060  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000060  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000060  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 143
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x17        
  Data2             0x17        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x17        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x17        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x18        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x18        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x18        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x18        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 144
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 145
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000060  
  Data2             0x750773f2  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x750773f2  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000060  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000060  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000060  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x67745ce5  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000060  
  operand1          0x67745ce5  
  control           0x1         
  Output:
  output            0x67745ce5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 146
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x53683fea  
  Data2             0x67745ce5  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x67745ce5  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x67745ce5  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x53683fea  
  operand1          0x67745ce5  
  control           0x2         
  Output:
  result            0xbadc9ccf  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xbadc9ccf  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xbadc9ccf  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xbadc9ccf  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 147
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000060  
  Data2             0x10000060  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000060  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000060  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000064  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000064  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000064  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000064  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 148
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x18        
  Data2             0x18        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x18        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x18        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x19        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x19        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x19        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x19        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 149
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 150
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000064  
  Data2             0x67745ce5  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x67745ce5  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000064  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000064  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000064  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x9b0eae9d  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000064  
  operand1          0x9b0eae9d  
  control           0x1         
  Output:
  output            0x9b0eae9d  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 151
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xbadc9ccf  
  Data2             0x9b0eae9d  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9b0eae9d  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x9b0eae9d  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xbadc9ccf  
  operand1          0x9b0eae9d  
  control           0x2         
  Output:
  result            0x55eb4b6c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x55eb4b6c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x55eb4b6c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x55eb4b6c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 152
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000064  
  Data2             0x10000064  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000064  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000064  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000068  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000068  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000068  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000068  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 153
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x19        
  Data2             0x19        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x19        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x19        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1a        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1a        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1a        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1a        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 154
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 155
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000068  
  Data2             0x9b0eae9d  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9b0eae9d  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000068  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000068  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000068  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x1ea9d4cc  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000068  
  operand1          0x1ea9d4cc  
  control           0x1         
  Output:
  output            0x1ea9d4cc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 156
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x55eb4b6c  
  Data2             0x1ea9d4cc  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1ea9d4cc  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x1ea9d4cc  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x55eb4b6c  
  operand1          0x1ea9d4cc  
  control           0x2         
  Output:
  result            0x74952038  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x74952038  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x74952038  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x74952038  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 157
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000068  
  Data2             0x10000068  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000068  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000068  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000006c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000006c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000006c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000006c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 158
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1a        
  Data2             0x1a        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1a        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1a        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1b        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1b        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1b        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1b        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 159
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 160
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000006c  
  Data2             0x1ea9d4cc  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1ea9d4cc  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000006c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000006c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000006c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x854a7c53  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000006c  
  operand1          0x854a7c53  
  control           0x1         
  Output:
  output            0x854a7c53  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 161
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x74952038  
  Data2             0x854a7c53  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x854a7c53  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x854a7c53  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x74952038  
  operand1          0x854a7c53  
  control           0x2         
  Output:
  result            0xf9df9c8b  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf9df9c8b  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf9df9c8b  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf9df9c8b  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 162
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000006c  
  Data2             0x1000006c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000006c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000006c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000070  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000070  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000070  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000070  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 163
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1b        
  Data2             0x1b        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1b        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1b        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 164
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 165
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000070  
  Data2             0x854a7c53  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x854a7c53  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000070  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000070  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000070  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x70e0b33a  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000070  
  operand1          0x70e0b33a  
  control           0x1         
  Output:
  output            0x70e0b33a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 166
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf9df9c8b  
  Data2             0x70e0b33a  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x70e0b33a  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x70e0b33a  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf9df9c8b  
  operand1          0x70e0b33a  
  control           0x2         
  Output:
  result            0x6ac04fc5  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6ac04fc5  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6ac04fc5  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6ac04fc5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 167
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000070  
  Data2             0x10000070  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000070  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000070  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000074  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000074  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000074  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000074  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 168
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1c        
  Data2             0x1c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1c        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1c        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1d        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1d        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1d        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1d        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 169
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 170
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000074  
  Data2             0x70e0b33a  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x70e0b33a  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000074  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000074  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000074  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x1b128e28  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000074  
  operand1          0x1b128e28  
  control           0x1         
  Output:
  output            0x1b128e28  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 171
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6ac04fc5  
  Data2             0x1b128e28  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1b128e28  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x1b128e28  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6ac04fc5  
  operand1          0x1b128e28  
  control           0x2         
  Output:
  result            0x85d2dded  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x85d2dded  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x85d2dded  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x85d2dded  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 172
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000074  
  Data2             0x10000074  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000074  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000074  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000078  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000078  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000078  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000078  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 173
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1d        
  Data2             0x1d        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1d        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1d        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 174
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 175
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000078  
  Data2             0x1b128e28  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1b128e28  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000078  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000078  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000078  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xea150cc4  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000078  
  operand1          0xea150cc4  
  control           0x1         
  Output:
  output            0xea150cc4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 176
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x85d2dded  
  Data2             0xea150cc4  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xea150cc4  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xea150cc4  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x85d2dded  
  operand1          0xea150cc4  
  control           0x2         
  Output:
  result            0x6fe7eab1  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6fe7eab1  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6fe7eab1  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6fe7eab1  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 177
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000078  
  Data2             0x10000078  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000078  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000078  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000007c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000007c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000007c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000007c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 178
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1e        
  Data2             0x1e        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1e        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1e        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x1f        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1f        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1f        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1f        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 179
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 180
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000007c  
  Data2             0xea150cc4  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xea150cc4  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000007c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000007c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000007c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x81e72593  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000007c  
  operand1          0x81e72593  
  control           0x1         
  Output:
  output            0x81e72593  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 181
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6fe7eab1  
  Data2             0x81e72593  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81e72593  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x81e72593  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6fe7eab1  
  operand1          0x81e72593  
  control           0x2         
  Output:
  result            0xf1cf1044  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf1cf1044  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf1cf1044  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf1cf1044  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 182
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000007c  
  Data2             0x1000007c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000007c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000007c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000080  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000080  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000080  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000080  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 183
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x1f        
  Data2             0x1f        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1f        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1f        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x20        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x20        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x20        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x20        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 184
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 185
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000080  
  Data2             0x81e72593  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x81e72593  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000080  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000080  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000080  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xd305fd08  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000080  
  operand1          0xd305fd08  
  control           0x1         
  Output:
  output            0xd305fd08  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 186
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf1cf1044  
  Data2             0xd305fd08  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd305fd08  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xd305fd08  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf1cf1044  
  operand1          0xd305fd08  
  control           0x2         
  Output:
  result            0xc4d50d4c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc4d50d4c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc4d50d4c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc4d50d4c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 187
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000080  
  Data2             0x10000080  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000080  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000080  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000084  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000084  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000084  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000084  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 188
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x20        
  Data2             0x20        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x20        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x20        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x21        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x21        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x21        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x21        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 189
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 190
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000084  
  Data2             0xd305fd08  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd305fd08  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000084  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000084  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000084  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x597018dd  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000084  
  operand1          0x597018dd  
  control           0x1         
  Output:
  output            0x597018dd  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 191
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xc4d50d4c  
  Data2             0x597018dd  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x597018dd  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x597018dd  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc4d50d4c  
  operand1          0x597018dd  
  control           0x2         
  Output:
  result            0x1e452629  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1e452629  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1e452629  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1e452629  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 192
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000084  
  Data2             0x10000084  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000084  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000084  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000088  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000088  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000088  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000088  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 193
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x21        
  Data2             0x21        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x21        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x21        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x22        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x22        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x22        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x22        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 194
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 195
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000088  
  Data2             0x597018dd  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x597018dd  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000088  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000088  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000088  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x4b3941b   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000088  
  operand1          0x4b3941b   
  control           0x1         
  Output:
  output            0x4b3941b   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 196
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x1e452629  
  Data2             0x4b3941b   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4b3941b   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x4b3941b   
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1e452629  
  operand1          0x4b3941b   
  control           0x2         
  Output:
  result            0x22f8ba44  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x22f8ba44  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x22f8ba44  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x22f8ba44  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 197
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000088  
  Data2             0x10000088  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000088  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000088  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000008c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000008c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000008c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000008c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 198
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x22        
  Data2             0x22        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x22        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x22        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x23        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x23        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x23        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x23        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 199
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 200
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000008c  
  Data2             0x4b3941b   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4b3941b   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000008c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000008c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000008c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x4a1e4993  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000008c  
  operand1          0x4a1e4993  
  control           0x1         
  Output:
  output            0x4a1e4993  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 201
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x22f8ba44  
  Data2             0x4a1e4993  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4a1e4993  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x4a1e4993  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x22f8ba44  
  operand1          0x4a1e4993  
  control           0x2         
  Output:
  result            0x6d1703d7  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6d1703d7  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6d1703d7  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6d1703d7  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 202
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000008c  
  Data2             0x1000008c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000008c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000008c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000090  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000090  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000090  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000090  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 203
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x23        
  Data2             0x23        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x23        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x23        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x24        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x24        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x24        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x24        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 204
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 205
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000090  
  Data2             0x4a1e4993  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4a1e4993  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000090  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000090  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000090  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x2649882f  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000090  
  operand1          0x2649882f  
  control           0x1         
  Output:
  output            0x2649882f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 206
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6d1703d7  
  Data2             0x2649882f  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2649882f  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x2649882f  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6d1703d7  
  operand1          0x2649882f  
  control           0x2         
  Output:
  result            0x93608c06  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x93608c06  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x93608c06  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x93608c06  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 207
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000090  
  Data2             0x10000090  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000090  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000090  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000094  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000094  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000094  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000094  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 208
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x24        
  Data2             0x24        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x24        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x24        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x25        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x25        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x25        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x25        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 209
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 210
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000094  
  Data2             0x2649882f  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2649882f  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000094  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000094  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000094  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x92401be7  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000094  
  operand1          0x92401be7  
  control           0x1         
  Output:
  output            0x92401be7  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 211
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x93608c06  
  Data2             0x92401be7  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x92401be7  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x92401be7  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x93608c06  
  operand1          0x92401be7  
  control           0x2         
  Output:
  result            0x25a0a7ed  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x25a0a7ed  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x25a0a7ed  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x25a0a7ed  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 212
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000094  
  Data2             0x10000094  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000094  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000094  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000098  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000098  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000098  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000098  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 213
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x25        
  Data2             0x25        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x25        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x25        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x26        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x26        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x26        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x26        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 214
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 215
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000098  
  Data2             0x92401be7  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x92401be7  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000098  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000098  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000098  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6b6ecaad  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000098  
  operand1          0x6b6ecaad  
  control           0x1         
  Output:
  output            0x6b6ecaad  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 216
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x25a0a7ed  
  Data2             0x6b6ecaad  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6b6ecaad  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6b6ecaad  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x25a0a7ed  
  operand1          0x6b6ecaad  
  control           0x2         
  Output:
  result            0x910f729a  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x910f729a  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x910f729a  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x910f729a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 217
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000098  
  Data2             0x10000098  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000098  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000098  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000009c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000009c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000009c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000009c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 218
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x26        
  Data2             0x26        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x26        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x26        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x27        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x27        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x27        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x27        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 219
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 220
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000009c  
  Data2             0x6b6ecaad  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6b6ecaad  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000009c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000009c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000009c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xf5a7dbf6  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000009c  
  operand1          0xf5a7dbf6  
  control           0x1         
  Output:
  output            0xf5a7dbf6  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 221
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x910f729a  
  Data2             0xf5a7dbf6  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf5a7dbf6  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xf5a7dbf6  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x910f729a  
  operand1          0xf5a7dbf6  
  control           0x2         
  Output:
  result            0x86b74e90  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x86b74e90  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x86b74e90  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x86b74e90  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 222
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000009c  
  Data2             0x1000009c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000009c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000009c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000a0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000a0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 223
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x27        
  Data2             0x27        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x27        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x27        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x28        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x28        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x28        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x28        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 224
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 225
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000a0  
  Data2             0xf5a7dbf6  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf5a7dbf6  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000a0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x3e0ca2d8  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a0  
  operand1          0x3e0ca2d8  
  control           0x1         
  Output:
  output            0x3e0ca2d8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 226
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x86b74e90  
  Data2             0x3e0ca2d8  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3e0ca2d8  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x3e0ca2d8  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x86b74e90  
  operand1          0x3e0ca2d8  
  control           0x2         
  Output:
  result            0xc4c3f168  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc4c3f168  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc4c3f168  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc4c3f168  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 227
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000a0  
  Data2             0x100000a0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000a0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000a4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000a4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 228
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x28        
  Data2             0x28        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x28        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x28        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x29        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x29        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x29        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x29        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 229
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 230
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000a4  
  Data2             0x3e0ca2d8  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3e0ca2d8  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000a4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xdc032bc8  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a4  
  operand1          0xdc032bc8  
  control           0x1         
  Output:
  output            0xdc032bc8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 231
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xc4c3f168  
  Data2             0xdc032bc8  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdc032bc8  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xdc032bc8  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc4c3f168  
  operand1          0xdc032bc8  
  control           0x2         
  Output:
  result            0xa0c71d30  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa0c71d30  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa0c71d30  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa0c71d30  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 232
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000a4  
  Data2             0x100000a4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000a4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000a8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000a8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 233
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x29        
  Data2             0x29        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x29        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x29        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2a        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2a        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2a        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2a        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 234
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 235
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000a8  
  Data2             0xdc032bc8  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdc032bc8  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000a8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000a8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x2fb8d984  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000a8  
  operand1          0x2fb8d984  
  control           0x1         
  Output:
  output            0x2fb8d984  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 236
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa0c71d30  
  Data2             0x2fb8d984  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2fb8d984  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x2fb8d984  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa0c71d30  
  operand1          0x2fb8d984  
  control           0x2         
  Output:
  result            0xd07ff6b4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd07ff6b4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd07ff6b4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd07ff6b4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 237
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000a8  
  Data2             0x100000a8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000a8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000a8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000ac  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000ac  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000ac  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000ac  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 238
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2a        
  Data2             0x2a        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2a        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2a        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2b        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2b        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2b        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2b        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 239
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 240
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000ac  
  Data2             0x2fb8d984  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2fb8d984  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000ac  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000ac  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000ac  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6a68f5c5  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000ac  
  operand1          0x6a68f5c5  
  control           0x1         
  Output:
  output            0x6a68f5c5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 241
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xd07ff6b4  
  Data2             0x6a68f5c5  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6a68f5c5  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6a68f5c5  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd07ff6b4  
  operand1          0x6a68f5c5  
  control           0x2         
  Output:
  result            0x3ae8ec79  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3ae8ec79  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3ae8ec79  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3ae8ec79  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 242
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000ac  
  Data2             0x100000ac  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000ac  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000ac  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000b0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000b0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 243
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2b        
  Data2             0x2b        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2b        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2b        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 244
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 245
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000b0  
  Data2             0x6a68f5c5  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6a68f5c5  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000b0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xcb213736  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b0  
  operand1          0xcb213736  
  control           0x1         
  Output:
  output            0xcb213736  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 246
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x3ae8ec79  
  Data2             0xcb213736  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xcb213736  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xcb213736  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3ae8ec79  
  operand1          0xcb213736  
  control           0x2         
  Output:
  result            0x60a23af   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x60a23af   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x60a23af   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x60a23af   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 247
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000b0  
  Data2             0x100000b0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000b0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000b4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000b4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 248
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2c        
  Data2             0x2c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2c        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2c        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2d        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2d        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2d        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2d        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 249
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 250
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000b4  
  Data2             0xcb213736  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xcb213736  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000b4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x47fd7a32  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b4  
  operand1          0x47fd7a32  
  control           0x1         
  Output:
  output            0x47fd7a32  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 251
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x60a23af   
  Data2             0x47fd7a32  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x47fd7a32  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x47fd7a32  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x60a23af   
  operand1          0x47fd7a32  
  control           0x2         
  Output:
  result            0x4e079de1  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4e079de1  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4e079de1  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4e079de1  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 252
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000b4  
  Data2             0x100000b4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000b4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000b8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000b8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 253
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2d        
  Data2             0x2d        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2d        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2d        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 254
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 255
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000b8  
  Data2             0x47fd7a32  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x47fd7a32  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000b8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000b8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xa5d830f9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000b8  
  operand1          0xa5d830f9  
  control           0x1         
  Output:
  output            0xa5d830f9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 256
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x4e079de1  
  Data2             0xa5d830f9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa5d830f9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xa5d830f9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4e079de1  
  operand1          0xa5d830f9  
  control           0x2         
  Output:
  result            0xf3dfceda  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf3dfceda  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf3dfceda  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf3dfceda  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 257
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000b8  
  Data2             0x100000b8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000b8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000b8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000bc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000bc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000bc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000bc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 258
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2e        
  Data2             0x2e        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2e        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2e        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x2f        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2f        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2f        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2f        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 259
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 260
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000bc  
  Data2             0xa5d830f9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa5d830f9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000bc  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000bc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000bc  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x3de2ca2   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000bc  
  operand1          0x3de2ca2   
  control           0x1         
  Output:
  output            0x3de2ca2   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 261
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf3dfceda  
  Data2             0x3de2ca2   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3de2ca2   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x3de2ca2   
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf3dfceda  
  operand1          0x3de2ca2   
  control           0x2         
  Output:
  result            0xf7bdfb7c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf7bdfb7c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf7bdfb7c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf7bdfb7c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 262
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000bc  
  Data2             0x100000bc  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000bc  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000bc  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000c0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000c0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 263
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x2f        
  Data2             0x2f        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2f        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2f        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x30        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x30        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x30        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x30        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 264
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 265
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000c0  
  Data2             0x3de2ca2   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3de2ca2   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000c0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6b4785df  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c0  
  operand1          0x6b4785df  
  control           0x1         
  Output:
  output            0x6b4785df  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 266
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf7bdfb7c  
  Data2             0x6b4785df  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6b4785df  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6b4785df  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf7bdfb7c  
  operand1          0x6b4785df  
  control           0x2         
  Output:
  result            0x6305815b  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6305815b  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6305815b  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6305815b  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 267
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000c0  
  Data2             0x100000c0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000c0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000c4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000c4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 268
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x30        
  Data2             0x30        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x30        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x30        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x31        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x31        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x31        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x31        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 269
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 270
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000c4  
  Data2             0x6b4785df  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6b4785df  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000c4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xb29f9496  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c4  
  operand1          0xb29f9496  
  control           0x1         
  Output:
  output            0xb29f9496  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 271
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6305815b  
  Data2             0xb29f9496  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb29f9496  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xb29f9496  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6305815b  
  operand1          0xb29f9496  
  control           0x2         
  Output:
  result            0x15a515f1  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x15a515f1  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x15a515f1  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x15a515f1  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 272
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000c4  
  Data2             0x100000c4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000c4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000c8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000c8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 273
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x31        
  Data2             0x31        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x31        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x31        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x32        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x32        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x32        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x32        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 274
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 275
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000c8  
  Data2             0xb29f9496  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb29f9496  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000c8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000c8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8c57c177  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000c8  
  operand1          0x8c57c177  
  control           0x1         
  Output:
  output            0x8c57c177  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 276
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x15a515f1  
  Data2             0x8c57c177  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8c57c177  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8c57c177  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x15a515f1  
  operand1          0x8c57c177  
  control           0x2         
  Output:
  result            0xa1fcd768  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa1fcd768  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa1fcd768  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa1fcd768  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 277
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000c8  
  Data2             0x100000c8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000c8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000c8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000cc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000cc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000cc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000cc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 278
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x32        
  Data2             0x32        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x32        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x32        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x33        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x33        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x33        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x33        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 279
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 280
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000cc  
  Data2             0x8c57c177  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8c57c177  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000cc  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000cc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000cc  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6612ede8  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000cc  
  operand1          0x6612ede8  
  control           0x1         
  Output:
  output            0x6612ede8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 281
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa1fcd768  
  Data2             0x6612ede8  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6612ede8  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6612ede8  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa1fcd768  
  operand1          0x6612ede8  
  control           0x2         
  Output:
  result            0x80fc550   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x80fc550   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x80fc550   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x80fc550   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 282
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000cc  
  Data2             0x100000cc  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000cc  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000cc  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000d0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000d0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 283
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x33        
  Data2             0x33        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x33        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x33        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x34        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x34        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x34        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x34        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 284
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 285
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000d0  
  Data2             0x6612ede8  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6612ede8  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000d0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xa35e1c63  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d0  
  operand1          0xa35e1c63  
  control           0x1         
  Output:
  output            0xa35e1c63  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 286
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x80fc550   
  Data2             0xa35e1c63  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa35e1c63  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xa35e1c63  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x80fc550   
  operand1          0xa35e1c63  
  control           0x2         
  Output:
  result            0xab6de1b3  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xab6de1b3  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xab6de1b3  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xab6de1b3  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 287
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000d0  
  Data2             0x100000d0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000d0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000d4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000d4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 288
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x34        
  Data2             0x34        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x34        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x34        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x35        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x35        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x35        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x35        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 289
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 290
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000d4  
  Data2             0xa35e1c63  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa35e1c63  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000d4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x290c4a5c  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d4  
  operand1          0x290c4a5c  
  control           0x1         
  Output:
  output            0x290c4a5c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 291
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xab6de1b3  
  Data2             0x290c4a5c  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x290c4a5c  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x290c4a5c  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xab6de1b3  
  operand1          0x290c4a5c  
  control           0x2         
  Output:
  result            0xd47a2c0f  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd47a2c0f  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd47a2c0f  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd47a2c0f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 292
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000d4  
  Data2             0x100000d4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000d4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000d8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000d8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 293
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x35        
  Data2             0x35        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x35        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x35        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x36        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x36        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x36        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x36        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 294
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 295
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000d8  
  Data2             0x290c4a5c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x290c4a5c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000d8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000d8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x32ab8bea  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000d8  
  operand1          0x32ab8bea  
  control           0x1         
  Output:
  output            0x32ab8bea  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 296
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xd47a2c0f  
  Data2             0x32ab8bea  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x32ab8bea  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x32ab8bea  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd47a2c0f  
  operand1          0x32ab8bea  
  control           0x2         
  Output:
  result            0x725b7f9   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x725b7f9   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x725b7f9   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x725b7f9   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 297
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000d8  
  Data2             0x100000d8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000d8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000d8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000dc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000dc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000dc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000dc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 298
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x36        
  Data2             0x36        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x36        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x36        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x37        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x37        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x37        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x37        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 299
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 300
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000dc  
  Data2             0x32ab8bea  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x32ab8bea  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000dc  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000dc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000dc  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x31b3c160  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000dc  
  operand1          0x31b3c160  
  control           0x1         
  Output:
  output            0x31b3c160  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 301
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x725b7f9   
  Data2             0x31b3c160  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x31b3c160  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x31b3c160  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x725b7f9   
  operand1          0x31b3c160  
  control           0x2         
  Output:
  result            0x38d97959  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x38d97959  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x38d97959  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x38d97959  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 302
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000dc  
  Data2             0x100000dc  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000dc  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000dc  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000e0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000e0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 303
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x37        
  Data2             0x37        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x37        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x37        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x38        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x38        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x38        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x38        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 304
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 305
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000e0  
  Data2             0x31b3c160  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x31b3c160  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000e0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xd9ffa43c  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e0  
  operand1          0xd9ffa43c  
  control           0x1         
  Output:
  output            0xd9ffa43c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 306
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x38d97959  
  Data2             0xd9ffa43c  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd9ffa43c  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xd9ffa43c  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x38d97959  
  operand1          0xd9ffa43c  
  control           0x2         
  Output:
  result            0x12d91d95  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x12d91d95  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x12d91d95  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x12d91d95  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 307
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000e0  
  Data2             0x100000e0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000e0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000e4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000e4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 308
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x38        
  Data2             0x38        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x38        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x38        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x39        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x39        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x39        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x39        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 309
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 310
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000e4  
  Data2             0xd9ffa43c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd9ffa43c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000e4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8fb8ceb8  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e4  
  operand1          0x8fb8ceb8  
  control           0x1         
  Output:
  output            0x8fb8ceb8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 311
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x12d91d95  
  Data2             0x8fb8ceb8  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8fb8ceb8  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8fb8ceb8  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x12d91d95  
  operand1          0x8fb8ceb8  
  control           0x2         
  Output:
  result            0xa291ec4d  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa291ec4d  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa291ec4d  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa291ec4d  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 312
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000e4  
  Data2             0x100000e4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000e4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000e8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000e8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 313
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x39        
  Data2             0x39        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x39        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x39        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3a        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3a        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3a        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3a        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 314
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 315
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000e8  
  Data2             0x8fb8ceb8  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8fb8ceb8  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000e8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000e8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6335d4bf  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000e8  
  operand1          0x6335d4bf  
  control           0x1         
  Output:
  output            0x6335d4bf  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 316
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa291ec4d  
  Data2             0x6335d4bf  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6335d4bf  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6335d4bf  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa291ec4d  
  operand1          0x6335d4bf  
  control           0x2         
  Output:
  result            0x5c7c10c   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5c7c10c   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5c7c10c   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5c7c10c   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 317
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000e8  
  Data2             0x100000e8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000e8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000e8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000ec  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000ec  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000ec  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000ec  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 318
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3a        
  Data2             0x3a        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3a        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3a        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3b        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3b        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3b        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3b        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 319
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 320
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000ec  
  Data2             0x6335d4bf  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6335d4bf  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000ec  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000ec  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000ec  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x3e6df8cb  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000ec  
  operand1          0x3e6df8cb  
  control           0x1         
  Output:
  output            0x3e6df8cb  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 321
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x5c7c10c   
  Data2             0x3e6df8cb  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3e6df8cb  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x3e6df8cb  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5c7c10c   
  operand1          0x3e6df8cb  
  control           0x2         
  Output:
  result            0x4435b9d7  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4435b9d7  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4435b9d7  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4435b9d7  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 322
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000ec  
  Data2             0x100000ec  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000ec  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000ec  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000f0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000f0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 323
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3b        
  Data2             0x3b        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3b        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3b        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 324
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 325
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000f0  
  Data2             0x3e6df8cb  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3e6df8cb  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f0  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000f0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f0  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x64e6febb  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f0  
  operand1          0x64e6febb  
  control           0x1         
  Output:
  output            0x64e6febb  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 326
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x4435b9d7  
  Data2             0x64e6febb  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x64e6febb  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x64e6febb  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4435b9d7  
  operand1          0x64e6febb  
  control           0x2         
  Output:
  result            0xa91cb892  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa91cb892  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa91cb892  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa91cb892  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 327
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000f0  
  Data2             0x100000f0  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000f0  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f0  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000f4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f4  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f4  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000f4  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 328
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3c        
  Data2             0x3c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3c        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3c        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3d        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3d        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3d        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3d        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 329
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 330
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000f4  
  Data2             0x64e6febb  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x64e6febb  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f4  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000f4  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f4  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xf487bf2d  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f4  
  operand1          0xf487bf2d  
  control           0x1         
  Output:
  output            0xf487bf2d  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 331
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa91cb892  
  Data2             0xf487bf2d  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf487bf2d  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xf487bf2d  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa91cb892  
  operand1          0xf487bf2d  
  control           0x2         
  Output:
  result            0x9da477bf  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x9da477bf  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x9da477bf  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9da477bf  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 332
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000f4  
  Data2             0x100000f4  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000f4  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f4  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000f8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f8  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f8  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000f8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 333
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3d        
  Data2             0x3d        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3d        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3d        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 334
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 335
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000f8  
  Data2             0xf487bf2d  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf487bf2d  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f8  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000f8  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000f8  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x58a56c44  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000f8  
  operand1          0x58a56c44  
  control           0x1         
  Output:
  output            0x58a56c44  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 336
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x9da477bf  
  Data2             0x58a56c44  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x58a56c44  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x58a56c44  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x9da477bf  
  operand1          0x58a56c44  
  control           0x2         
  Output:
  result            0xf649e403  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf649e403  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf649e403  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf649e403  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 337
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000f8  
  Data2             0x100000f8  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000f8  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000f8  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x100000fc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000fc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000fc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x100000fc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 338
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3e        
  Data2             0x3e        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3e        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3e        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x3f        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3f        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3f        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3f        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 339
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 340
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x100000fc  
  Data2             0x58a56c44  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x58a56c44  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000fc  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x100000fc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x100000fc  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x487253a2  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x100000fc  
  operand1          0x487253a2  
  control           0x1         
  Output:
  output            0x487253a2  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 341
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf649e403  
  Data2             0x487253a2  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x487253a2  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x487253a2  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf649e403  
  operand1          0x487253a2  
  control           0x2         
  Output:
  result            0x3ebc37a5  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3ebc37a5  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3ebc37a5  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3ebc37a5  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 342
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x100000fc  
  Data2             0x100000fc  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x100000fc  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x100000fc  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000100  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000100  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000100  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000100  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 343
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x3f        
  Data2             0x3f        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3f        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3f        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x40        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x40        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x40        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x40        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 344
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 345
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000100  
  Data2             0x487253a2  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x487253a2  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000100  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000100  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000100  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x2b7de96d  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000100  
  operand1          0x2b7de96d  
  control           0x1         
  Output:
  output            0x2b7de96d  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 346
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x3ebc37a5  
  Data2             0x2b7de96d  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2b7de96d  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x2b7de96d  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3ebc37a5  
  operand1          0x2b7de96d  
  control           0x2         
  Output:
  result            0x6a3a2112  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6a3a2112  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6a3a2112  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6a3a2112  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 347
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000100  
  Data2             0x10000100  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000100  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000100  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000104  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000104  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000104  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000104  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 348
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x40        
  Data2             0x40        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x40        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x40        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x41        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x41        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x41        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x41        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 349
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 350
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000104  
  Data2             0x2b7de96d  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x2b7de96d  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000104  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000104  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000104  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xf8653f5f  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000104  
  operand1          0xf8653f5f  
  control           0x1         
  Output:
  output            0xf8653f5f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 351
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6a3a2112  
  Data2             0xf8653f5f  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf8653f5f  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xf8653f5f  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6a3a2112  
  operand1          0xf8653f5f  
  control           0x2         
  Output:
  result            0x629f6071  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x629f6071  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x629f6071  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x629f6071  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 352
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000104  
  Data2             0x10000104  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000104  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000104  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000108  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000108  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000108  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000108  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 353
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x41        
  Data2             0x41        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x41        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x41        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x42        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x42        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x42        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x42        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 354
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 355
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000108  
  Data2             0xf8653f5f  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xf8653f5f  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000108  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000108  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000108  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x34a3ff32  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000108  
  operand1          0x34a3ff32  
  control           0x1         
  Output:
  output            0x34a3ff32  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 356
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x629f6071  
  Data2             0x34a3ff32  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x34a3ff32  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x34a3ff32  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x629f6071  
  operand1          0x34a3ff32  
  control           0x2         
  Output:
  result            0x97435fa3  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x97435fa3  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x97435fa3  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x97435fa3  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 357
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000108  
  Data2             0x10000108  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000108  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000108  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000010c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000010c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000010c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000010c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 358
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x42        
  Data2             0x42        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x42        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x42        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x43        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x43        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x43        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x43        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 359
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 360
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000010c  
  Data2             0x34a3ff32  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x34a3ff32  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000010c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000010c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000010c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xbf3d73d2  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000010c  
  operand1          0xbf3d73d2  
  control           0x1         
  Output:
  output            0xbf3d73d2  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 361
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x97435fa3  
  Data2             0xbf3d73d2  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xbf3d73d2  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xbf3d73d2  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x97435fa3  
  operand1          0xbf3d73d2  
  control           0x2         
  Output:
  result            0x5680d375  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5680d375  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5680d375  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5680d375  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 362
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000010c  
  Data2             0x1000010c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000010c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000010c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000110  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000110  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000110  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000110  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 363
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x43        
  Data2             0x43        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x43        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x43        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x44        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x44        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x44        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x44        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 364
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 365
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000110  
  Data2             0xbf3d73d2  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xbf3d73d2  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000110  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000110  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000110  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x3f5c76df  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000110  
  operand1          0x3f5c76df  
  control           0x1         
  Output:
  output            0x3f5c76df  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 366
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x5680d375  
  Data2             0x3f5c76df  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3f5c76df  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x3f5c76df  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5680d375  
  operand1          0x3f5c76df  
  control           0x2         
  Output:
  result            0x95dd4a54  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x95dd4a54  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x95dd4a54  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x95dd4a54  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 367
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000110  
  Data2             0x10000110  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000110  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000110  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000114  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000114  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000114  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000114  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 368
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x44        
  Data2             0x44        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x44        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x44        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x45        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x45        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x45        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x45        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 369
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 370
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000114  
  Data2             0x3f5c76df  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x3f5c76df  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000114  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000114  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000114  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x5b6ae9ff  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000114  
  operand1          0x5b6ae9ff  
  control           0x1         
  Output:
  output            0x5b6ae9ff  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 371
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x95dd4a54  
  Data2             0x5b6ae9ff  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5b6ae9ff  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x5b6ae9ff  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x95dd4a54  
  operand1          0x5b6ae9ff  
  control           0x2         
  Output:
  result            0xf1483453  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf1483453  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf1483453  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf1483453  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 372
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000114  
  Data2             0x10000114  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000114  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000114  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000118  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000118  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000118  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000118  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 373
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x45        
  Data2             0x45        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x45        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x45        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x46        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x46        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x46        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x46        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 374
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 375
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000118  
  Data2             0x5b6ae9ff  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5b6ae9ff  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000118  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000118  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000118  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xd62254ec  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000118  
  operand1          0xd62254ec  
  control           0x1         
  Output:
  output            0xd62254ec  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 376
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf1483453  
  Data2             0xd62254ec  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd62254ec  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xd62254ec  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf1483453  
  operand1          0xd62254ec  
  control           0x2         
  Output:
  result            0xc76a893f  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc76a893f  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc76a893f  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc76a893f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 377
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000118  
  Data2             0x10000118  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000118  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000118  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000011c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000011c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000011c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000011c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 378
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x46        
  Data2             0x46        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x46        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x46        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x47        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x47        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x47        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x47        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 379
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 380
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000011c  
  Data2             0xd62254ec  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd62254ec  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000011c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000011c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000011c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x7664d021  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000011c  
  operand1          0x7664d021  
  control           0x1         
  Output:
  output            0x7664d021  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 381
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xc76a893f  
  Data2             0x7664d021  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x7664d021  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x7664d021  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc76a893f  
  operand1          0x7664d021  
  control           0x2         
  Output:
  result            0x3dcf5960  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x3dcf5960  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x3dcf5960  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x3dcf5960  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 382
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000011c  
  Data2             0x1000011c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000011c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000011c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000120  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000120  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000120  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000120  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 383
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x47        
  Data2             0x47        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x47        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x47        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x48        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x48        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x48        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x48        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 384
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 385
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000120  
  Data2             0x7664d021  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x7664d021  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000120  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000120  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000120  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xad88fdaa  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000120  
  operand1          0xad88fdaa  
  control           0x1         
  Output:
  output            0xad88fdaa  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 386
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x3dcf5960  
  Data2             0xad88fdaa  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xad88fdaa  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xad88fdaa  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x3dcf5960  
  operand1          0xad88fdaa  
  control           0x2         
  Output:
  result            0xeb58570a  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xeb58570a  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xeb58570a  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xeb58570a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 387
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000120  
  Data2             0x10000120  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000120  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000120  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000124  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000124  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000124  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000124  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 388
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x48        
  Data2             0x48        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x48        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x48        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x49        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x49        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x49        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x49        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 389
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 390
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000124  
  Data2             0xad88fdaa  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xad88fdaa  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000124  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000124  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000124  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x67ac0d30  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000124  
  operand1          0x67ac0d30  
  control           0x1         
  Output:
  output            0x67ac0d30  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 391
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xeb58570a  
  Data2             0x67ac0d30  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x67ac0d30  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x67ac0d30  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xeb58570a  
  operand1          0x67ac0d30  
  control           0x2         
  Output:
  result            0x5304643a  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5304643a  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5304643a  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5304643a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 392
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000124  
  Data2             0x10000124  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000124  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000124  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000128  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000128  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000128  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000128  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 393
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x49        
  Data2             0x49        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x49        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x49        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4a        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4a        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4a        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4a        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 394
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 395
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000128  
  Data2             0x67ac0d30  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x67ac0d30  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000128  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000128  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000128  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x553043f9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000128  
  operand1          0x553043f9  
  control           0x1         
  Output:
  output            0x553043f9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 396
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x5304643a  
  Data2             0x553043f9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x553043f9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x553043f9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5304643a  
  operand1          0x553043f9  
  control           0x2         
  Output:
  result            0xa834a833  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xa834a833  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xa834a833  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xa834a833  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 397
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000128  
  Data2             0x10000128  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000128  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000128  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000012c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000012c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000012c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000012c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 398
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4a        
  Data2             0x4a        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4a        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4a        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4b        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4b        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4b        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4b        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 399
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 400
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000012c  
  Data2             0x553043f9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x553043f9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000012c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000012c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000012c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x9e84c09b  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000012c  
  operand1          0x9e84c09b  
  control           0x1         
  Output:
  output            0x9e84c09b  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 401
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xa834a833  
  Data2             0x9e84c09b  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9e84c09b  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x9e84c09b  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xa834a833  
  operand1          0x9e84c09b  
  control           0x2         
  Output:
  result            0x46b968ce  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x46b968ce  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x46b968ce  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x46b968ce  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 402
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000012c  
  Data2             0x1000012c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000012c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000012c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000130  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000130  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000130  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000130  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 403
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4b        
  Data2             0x4b        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4b        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4b        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 404
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 405
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000130  
  Data2             0x9e84c09b  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x9e84c09b  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000130  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000130  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000130  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xe77516fe  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000130  
  operand1          0xe77516fe  
  control           0x1         
  Output:
  output            0xe77516fe  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 406
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x46b968ce  
  Data2             0xe77516fe  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xe77516fe  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xe77516fe  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x46b968ce  
  operand1          0xe77516fe  
  control           0x2         
  Output:
  result            0x2e2e7fcc  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2e2e7fcc  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2e2e7fcc  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2e2e7fcc  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 407
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000130  
  Data2             0x10000130  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000130  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000130  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000134  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000134  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000134  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000134  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 408
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4c        
  Data2             0x4c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4c        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4c        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4d        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4d        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4d        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4d        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 409
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 410
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000134  
  Data2             0xe77516fe  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xe77516fe  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000134  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000134  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000134  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xa9ec872a  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000134  
  operand1          0xa9ec872a  
  control           0x1         
  Output:
  output            0xa9ec872a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 411
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x2e2e7fcc  
  Data2             0xa9ec872a  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa9ec872a  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xa9ec872a  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2e2e7fcc  
  operand1          0xa9ec872a  
  control           0x2         
  Output:
  result            0xd81b06f6  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd81b06f6  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd81b06f6  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd81b06f6  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 412
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000134  
  Data2             0x10000134  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000134  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000134  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000138  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000138  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000138  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000138  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 413
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4d        
  Data2             0x4d        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4d        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4d        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 414
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 415
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000138  
  Data2             0xa9ec872a  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xa9ec872a  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000138  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000138  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000138  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x4aab5412  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000138  
  operand1          0x4aab5412  
  control           0x1         
  Output:
  output            0x4aab5412  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 416
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xd81b06f6  
  Data2             0x4aab5412  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4aab5412  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x4aab5412  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd81b06f6  
  operand1          0x4aab5412  
  control           0x2         
  Output:
  result            0x22c65b08  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x22c65b08  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x22c65b08  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x22c65b08  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 417
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000138  
  Data2             0x10000138  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000138  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000138  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000013c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000013c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000013c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000013c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 418
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4e        
  Data2             0x4e        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4e        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4e        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x4f        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4f        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4f        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4f        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 419
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 420
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000013c  
  Data2             0x4aab5412  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4aab5412  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000013c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000013c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000013c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xd4c22f7c  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000013c  
  operand1          0xd4c22f7c  
  control           0x1         
  Output:
  output            0xd4c22f7c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 421
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x22c65b08  
  Data2             0xd4c22f7c  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd4c22f7c  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xd4c22f7c  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x22c65b08  
  operand1          0xd4c22f7c  
  control           0x2         
  Output:
  result            0xf7888a84  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf7888a84  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf7888a84  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf7888a84  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 422
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000013c  
  Data2             0x1000013c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000013c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000013c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000140  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000140  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000140  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000140  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 423
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x4f        
  Data2             0x4f        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x4f        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4f        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x50        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x50        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x50        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x50        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 424
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 425
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000140  
  Data2             0xd4c22f7c  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd4c22f7c  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000140  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000140  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000140  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x13d291c   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000140  
  operand1          0x13d291c   
  control           0x1         
  Output:
  output            0x13d291c   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 426
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf7888a84  
  Data2             0x13d291c   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x13d291c   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x13d291c   
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf7888a84  
  operand1          0x13d291c   
  control           0x2         
  Output:
  result            0xf8c5b3a0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xf8c5b3a0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xf8c5b3a0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xf8c5b3a0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 427
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000140  
  Data2             0x10000140  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000140  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000140  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000144  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000144  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000144  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000144  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 428
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x50        
  Data2             0x50        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x50        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x50        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x51        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x51        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x51        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x51        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 429
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 430
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000144  
  Data2             0x13d291c   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x13d291c   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000144  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000144  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000144  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x7370f500  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000144  
  operand1          0x7370f500  
  control           0x1         
  Output:
  output            0x7370f500  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 431
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xf8c5b3a0  
  Data2             0x7370f500  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x7370f500  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x7370f500  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xf8c5b3a0  
  operand1          0x7370f500  
  control           0x2         
  Output:
  result            0x6c36a8a0  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x6c36a8a0  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x6c36a8a0  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x6c36a8a0  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 432
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000144  
  Data2             0x10000144  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000144  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000144  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000148  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000148  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000148  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000148  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 433
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x51        
  Data2             0x51        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x51        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x51        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x52        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x52        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x52        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x52        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 434
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 435
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000148  
  Data2             0x7370f500  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x7370f500  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000148  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000148  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000148  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x472c7b67  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000148  
  operand1          0x472c7b67  
  control           0x1         
  Output:
  output            0x472c7b67  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 436
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x6c36a8a0  
  Data2             0x472c7b67  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x472c7b67  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x472c7b67  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x6c36a8a0  
  operand1          0x472c7b67  
  control           0x2         
  Output:
  result            0xb3632407  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xb3632407  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xb3632407  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb3632407  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 437
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000148  
  Data2             0x10000148  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000148  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000148  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000014c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000014c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000014c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000014c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 438
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x52        
  Data2             0x52        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x52        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x52        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x53        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x53        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x53        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x53        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 439
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 440
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000014c  
  Data2             0x472c7b67  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x472c7b67  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000014c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000014c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000014c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x482092e8  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000014c  
  operand1          0x482092e8  
  control           0x1         
  Output:
  output            0x482092e8  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 441
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xb3632407  
  Data2             0x482092e8  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x482092e8  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x482092e8  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xb3632407  
  operand1          0x482092e8  
  control           0x2         
  Output:
  result            0xfb83b6ef  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xfb83b6ef  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xfb83b6ef  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xfb83b6ef  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 442
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000014c  
  Data2             0x1000014c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000014c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000014c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000150  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000150  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000150  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000150  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 443
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x53        
  Data2             0x53        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x53        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x53        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x54        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x54        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x54        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x54        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 444
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 445
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000150  
  Data2             0x482092e8  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x482092e8  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000150  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000150  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000150  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8f223ba2  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000150  
  operand1          0x8f223ba2  
  control           0x1         
  Output:
  output            0x8f223ba2  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 446
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xfb83b6ef  
  Data2             0x8f223ba2  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8f223ba2  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8f223ba2  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xfb83b6ef  
  operand1          0x8f223ba2  
  control           0x2         
  Output:
  result            0x8aa5f291  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x8aa5f291  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x8aa5f291  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8aa5f291  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 447
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000150  
  Data2             0x10000150  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000150  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000150  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000154  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000154  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000154  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000154  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 448
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x54        
  Data2             0x54        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x54        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x54        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x55        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x55        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x55        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x55        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 449
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 450
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000154  
  Data2             0x8f223ba2  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8f223ba2  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000154  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000154  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000154  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8b2601ed  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000154  
  operand1          0x8b2601ed  
  control           0x1         
  Output:
  output            0x8b2601ed  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 451
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x8aa5f291  
  Data2             0x8b2601ed  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8b2601ed  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8b2601ed  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x8aa5f291  
  operand1          0x8b2601ed  
  control           0x2         
  Output:
  result            0x15cbf47e  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x15cbf47e  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x15cbf47e  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x15cbf47e  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 452
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000154  
  Data2             0x10000154  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000154  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000154  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000158  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000158  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000158  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000158  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 453
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x55        
  Data2             0x55        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x55        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x55        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x56        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x56        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x56        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x56        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 454
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 455
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000158  
  Data2             0x8b2601ed  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8b2601ed  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000158  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000158  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000158  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x407ebaa   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000158  
  operand1          0x407ebaa   
  control           0x1         
  Output:
  output            0x407ebaa   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 456
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x15cbf47e  
  Data2             0x407ebaa   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x407ebaa   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x407ebaa   
--------------------------------------------------
ALU Main
  Input:
  operand0          0x15cbf47e  
  operand1          0x407ebaa   
  control           0x2         
  Output:
  result            0x19d3e028  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x19d3e028  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x19d3e028  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x19d3e028  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 457
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000158  
  Data2             0x10000158  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000158  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000158  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000015c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000015c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000015c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000015c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 458
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x56        
  Data2             0x56        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x56        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x56        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x57        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x57        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x57        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x57        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 459
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 460
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000015c  
  Data2             0x407ebaa   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x407ebaa   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000015c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000015c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000015c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x1355de5f  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000015c  
  operand1          0x1355de5f  
  control           0x1         
  Output:
  output            0x1355de5f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 461
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x19d3e028  
  Data2             0x1355de5f  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1355de5f  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x1355de5f  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x19d3e028  
  operand1          0x1355de5f  
  control           0x2         
  Output:
  result            0x2d29be87  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x2d29be87  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x2d29be87  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x2d29be87  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 462
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000015c  
  Data2             0x1000015c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000015c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000015c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000160  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000160  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000160  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000160  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 463
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x57        
  Data2             0x57        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x57        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x57        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x58        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x58        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x58        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x58        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 464
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 465
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000160  
  Data2             0x1355de5f  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1355de5f  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000160  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000160  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000160  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xdcaca1d9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000160  
  operand1          0xdcaca1d9  
  control           0x1         
  Output:
  output            0xdcaca1d9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 466
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x2d29be87  
  Data2             0xdcaca1d9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdcaca1d9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xdcaca1d9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x2d29be87  
  operand1          0xdcaca1d9  
  control           0x2         
  Output:
  result            0x9d66060   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x9d66060   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x9d66060   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9d66060   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 467
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000160  
  Data2             0x10000160  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000160  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000160  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000164  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000164  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000164  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000164  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 468
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x58        
  Data2             0x58        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x58        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x58        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x59        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x59        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x59        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x59        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 469
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 470
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000164  
  Data2             0xdcaca1d9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xdcaca1d9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000164  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000164  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000164  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x6ea61b8a  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000164  
  operand1          0x6ea61b8a  
  control           0x1         
  Output:
  output            0x6ea61b8a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 471
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x9d66060   
  Data2             0x6ea61b8a  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6ea61b8a  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x6ea61b8a  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x9d66060   
  operand1          0x6ea61b8a  
  control           0x2         
  Output:
  result            0x787c7bea  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x787c7bea  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x787c7bea  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x787c7bea  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 472
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000164  
  Data2             0x10000164  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000164  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000164  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000168  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000168  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000168  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000168  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 473
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x59        
  Data2             0x59        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x59        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x59        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5a        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5a        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5a        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5a        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 474
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 475
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000168  
  Data2             0x6ea61b8a  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x6ea61b8a  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000168  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000168  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000168  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xff5e24d9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000168  
  operand1          0xff5e24d9  
  control           0x1         
  Output:
  output            0xff5e24d9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 476
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x787c7bea  
  Data2             0xff5e24d9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xff5e24d9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xff5e24d9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x787c7bea  
  operand1          0xff5e24d9  
  control           0x2         
  Output:
  result            0x77daa0c3  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x77daa0c3  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x77daa0c3  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x77daa0c3  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 477
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000168  
  Data2             0x10000168  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000168  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000168  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000016c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000016c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000016c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000016c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 478
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5a        
  Data2             0x5a        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5a        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5a        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5b        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5b        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5b        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5b        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 479
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 480
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000016c  
  Data2             0xff5e24d9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xff5e24d9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000016c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000016c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000016c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x88b69792  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000016c  
  operand1          0x88b69792  
  control           0x1         
  Output:
  output            0x88b69792  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 481
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x77daa0c3  
  Data2             0x88b69792  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x88b69792  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x88b69792  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x77daa0c3  
  operand1          0x88b69792  
  control           0x2         
  Output:
  result            0x913855    
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x913855    
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x913855    
  operand1          0x0         
  control           0x0         
  Output:
  output            0x913855    
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 482
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000016c  
  Data2             0x1000016c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000016c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000016c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000170  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000170  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000170  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000170  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 483
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5b        
  Data2             0x5b        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5b        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5b        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5c        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5c        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5c        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5c        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 484
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 485
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000170  
  Data2             0x88b69792  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x88b69792  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000170  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000170  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000170  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xb7d4b60   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000170  
  operand1          0xb7d4b60   
  control           0x1         
  Output:
  output            0xb7d4b60   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 486
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x913855    
  Data2             0xb7d4b60   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb7d4b60   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xb7d4b60   
--------------------------------------------------
ALU Main
  Input:
  operand0          0x913855    
  operand1          0xb7d4b60   
  control           0x2         
  Output:
  result            0xc0e83b5   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xc0e83b5   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xc0e83b5   
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc0e83b5   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 487
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000170  
  Data2             0x10000170  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000170  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000170  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000174  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000174  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000174  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000174  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 488
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5c        
  Data2             0x5c        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5c        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5c        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5d        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5d        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5d        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5d        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 489
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 490
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000174  
  Data2             0xb7d4b60   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xb7d4b60   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000174  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000174  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000174  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xafc2b711  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000174  
  operand1          0xafc2b711  
  control           0x1         
  Output:
  output            0xafc2b711  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 491
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xc0e83b5   
  Data2             0xafc2b711  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xafc2b711  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xafc2b711  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xc0e83b5   
  operand1          0xafc2b711  
  control           0x2         
  Output:
  result            0xbbd13ac6  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xbbd13ac6  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xbbd13ac6  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xbbd13ac6  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 492
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000174  
  Data2             0x10000174  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000174  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000174  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000178  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000178  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000178  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000178  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 493
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5d        
  Data2             0x5d        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5d        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5d        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5e        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5e        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5e        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5e        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 494
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 495
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000178  
  Data2             0xafc2b711  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xafc2b711  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000178  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000178  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000178  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x1143e933  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000178  
  operand1          0x1143e933  
  control           0x1         
  Output:
  output            0x1143e933  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 496
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xbbd13ac6  
  Data2             0x1143e933  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1143e933  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x1143e933  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xbbd13ac6  
  operand1          0x1143e933  
  control           0x2         
  Output:
  result            0xcd1523f9  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xcd1523f9  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xcd1523f9  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xcd1523f9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 497
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000178  
  Data2             0x10000178  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000178  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000178  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000017c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000017c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000017c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000017c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 498
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5e        
  Data2             0x5e        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5e        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5e        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x5f        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x5f        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x5f        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x5f        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 499
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 500
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000017c  
  Data2             0x1143e933  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1143e933  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000017c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000017c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000017c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xaacc00c9  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000017c  
  operand1          0xaacc00c9  
  control           0x1         
  Output:
  output            0xaacc00c9  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 501
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xcd1523f9  
  Data2             0xaacc00c9  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaacc00c9  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xaacc00c9  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xcd1523f9  
  operand1          0xaacc00c9  
  control           0x2         
  Output:
  result            0x77e124c2  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x77e124c2  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x77e124c2  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x77e124c2  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 502
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000017c  
  Data2             0x1000017c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000017c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000017c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000180  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000180  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000180  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000180  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 503
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x5f        
  Data2             0x5f        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x5f        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x5f        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x60        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x60        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x60        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x60        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 504
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 505
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000180  
  Data2             0xaacc00c9  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xaacc00c9  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000180  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000180  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000180  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x8c95e985  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000180  
  operand1          0x8c95e985  
  control           0x1         
  Output:
  output            0x8c95e985  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 506
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x77e124c2  
  Data2             0x8c95e985  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8c95e985  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x8c95e985  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x77e124c2  
  operand1          0x8c95e985  
  control           0x2         
  Output:
  result            0x4770e47   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x4770e47   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x4770e47   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x4770e47   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 507
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000180  
  Data2             0x10000180  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000180  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000180  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000184  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000184  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000184  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000184  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 508
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x60        
  Data2             0x60        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x60        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x60        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x61        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x61        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x61        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x61        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 509
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 510
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000184  
  Data2             0x8c95e985  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x8c95e985  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000184  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000184  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000184  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0x1bbb31d   
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000184  
  operand1          0x1bbb31d   
  control           0x1         
  Output:
  output            0x1bbb31d   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 511
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x4770e47   
  Data2             0x1bbb31d   
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1bbb31d   
  operand1          0x5020      
  control           0x0         
  Output:
  output            0x1bbb31d   
--------------------------------------------------
ALU Main
  Input:
  operand0          0x4770e47   
  operand1          0x1bbb31d   
  control           0x2         
  Output:
  result            0x632c164   
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x632c164   
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x632c164   
  operand1          0x0         
  control           0x0         
  Output:
  output            0x632c164   
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 512
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000184  
  Data2             0x10000184  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000184  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000184  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000188  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000188  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000188  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000188  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 513
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x61        
  Data2             0x61        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x61        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x61        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x62        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x62        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x62        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x62        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 514
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 515
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000188  
  Data2             0x1bbb31d   
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1bbb31d   
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000188  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000188  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000188  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xd318c95a  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000188  
  operand1          0xd318c95a  
  control           0x1         
  Output:
  output            0xd318c95a  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 516
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0x632c164   
  Data2             0xd318c95a  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd318c95a  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xd318c95a  
--------------------------------------------------
ALU Main
  Input:
  operand0          0x632c164   
  operand1          0xd318c95a  
  control           0x2         
  Output:
  result            0xd94b8abe  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0xd94b8abe  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0xd94b8abe  
  operand1          0x0         
  control           0x0         
  Output:
  output            0xd94b8abe  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 517
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x10000188  
  Data2             0x10000188  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x10000188  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000188  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x1000018c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000018c  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000018c  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x1000018c  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 518
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x62        
  Data2             0x62        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x62        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x62        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x63        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x63        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x63        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x63        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 519
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 520
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x1000018c  
  Data2             0xd318c95a  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xd318c95a  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000018c  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x1000018c  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x1000018c  
  memRead           0x1         
  memWrite          0x0         
  Output:
  readData          0xc3d19c71  
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x1000018c  
  operand1          0xc3d19c71  
  control           0x1         
  Output:
  output            0xc3d19c71  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400060    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400064    
  operand1          0x0         
  control           0x2         
  Output:
  result            0x400064    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400064    
  operand1          0x400064    
  control           0x0         
  Output:
  output            0x400064    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400064    
  operand1          0x5b00000   
  control           0x0         
  Output:
  output            0x400064    
====================================================================
Cycle 521
  		add $t2, $t2, $t4			#add to total
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400064    
  Output:
  instruction       0x14c5020   
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xa         
  Reg2              0xc         
  Output:
  Data1             0xd94b8abe  
  Data2             0xc3d19c71  
--------------------------------------------------
Control
  Input:
  Opcode            0x0         
  Output:
  RegDst            0x1         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x1         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0xa         
  control           0x1         
  Output:
  output            0xa         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x2         
  func              0x20        
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xc3d19c71  
  operand1          0x5020      
  control           0x0         
  Output:
  output            0xc3d19c71  
--------------------------------------------------
ALU Main
  Input:
  operand0          0xd94b8abe  
  operand1          0xc3d19c71  
  control           0x2         
  Output:
  result            0x9d1d272f  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x9d1d272f  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x9d1d272f  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x9d1d272f  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400064    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400068    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400068    
  operand1          0x14080     
  control           0x2         
  Output:
  result            0x4140e8    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400068    
  operand1          0x4140e8    
  control           0x0         
  Output:
  output            0x400068    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400068    
  operand1          0x5314080   
  control           0x0         
  Output:
  output            0x400068    
====================================================================
Cycle 522
  		addi $t3, $t3, 4			#increment address
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400068    
  Output:
  instruction       0x216b0004  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xb         
  Output:
  Data1             0x1000018c  
  Data2             0x1000018c  
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xb         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xb         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x4         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x1000018c  
  operand1          0x4         
  control           0x1         
  Output:
  output            0x4         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x1000018c  
  operand1          0x4         
  control           0x2         
  Output:
  result            0x10000190  
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x10000190  
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x10000190  
  operand1          0x0         
  control           0x0         
  Output:
  output            0x10000190  
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400068    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x40006c    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x40006c    
  operand1          0x10        
  control           0x2         
  Output:
  result            0x40007c    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x40006c    
  operand1          0x40007c    
  control           0x0         
  Output:
  output            0x40006c    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x40006c    
  operand1          0x5ac0010   
  control           0x0         
  Output:
  output            0x40006c    
====================================================================
Cycle 523
  		addi $t0, $t0, 1			#increment loop counter
--------------------------------------------------
Instruction Memory
  Input:
  address           0x40006c    
  Output:
  instruction       0x21080001  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x8         
  Reg2              0x8         
  Output:
  Data1             0x63        
  Data2             0x63        
--------------------------------------------------
Control
  Input:
  Opcode            0x8         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x8         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x8         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x1         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x63        
  operand1          0x1         
  control           0x1         
  Output:
  output            0x1         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x63        
  operand1          0x1         
  control           0x2         
  Output:
  result            0x64        
  zero              0x0         
--------------------------------------------------
Data Memory
  Input:
  address           0x64        
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x64        
  operand1          0x0         
  control           0x0         
  Output:
  output            0x64        
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x40006c    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400070    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400070    
  operand1          0x400074    
  control           0x0         
  Output:
  output            0x400070    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400070    
  operand1          0x4200004   
  control           0x0         
  Output:
  output            0x400070    
====================================================================
Cycle 524
  		beq $0, $0, 0x40005c          #back to sumLoop                    # 0x 400'070
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400070    
  Output:
  instruction       0x1000fffb  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0x0         
  Reg2              0x0         
  Output:
  Data1             0x0         
  Data2             0x0         
--------------------------------------------------
Control
  Input:
  Opcode            0x4         
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x1         
  MemRead           0x0         
  MemToReg          0x0         
  ALUOp0            0x1         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x0         
  RegWrite          0x0         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0x0         
  operand1          0x1f        
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x1         
  func              0x3b        
  Output:
  output            0x6         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0x0         
  operand1          0xfffffffb  
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x6         
  Output:
  result            0x0         
  zero              0x1         
--------------------------------------------------
Data Memory
  Input:
  address           0x0         
  memRead           0x0         
  memWrite          0x0         
  Output:
  readData          0x0         
--------------------------------------------------
MUX MemToReg
  Input:
  operand0          0x0         
  operand1          0x0         
  control           0x0         
  Output:
  output            0x0         
--------------------------------------------------
ALU PC + 4
  Input:
  operand0          0x400070    
  operand1          0x4         
  control           0x2         
  Output:
  result            0x400074    
  zero              0x0         
--------------------------------------------------
ALU PC + branch
  Input:
  operand0          0x400074    
  operand1          0xffffffec  
  control           0x2         
  Output:
  result            0x400060    
  zero              0x0         
--------------------------------------------------
MUX Branch
  Input:
  operand0          0x400074    
  operand1          0x400060    
  control           0x1         
  Output:
  output            0x400060    
--------------------------------------------------
MUX Jump
  Input:
  operand0          0x400060    
  operand1          0x3ffec     
  control           0x0         
  Output:
  output            0x400060    
====================================================================
Cycle 525
  		lw $t4, 0($t3)				#load array value    #0x 400'060
--------------------------------------------------
Instruction Memory
  Input:
  address           0x400060    
  Output:
  instruction       0x8d6c0000  
--------------------------------------------------
Register File Read
  Input:
  Reg1              0xb         
  Reg2              0xc         
  Output:
  Data1             0x10000190  
  Data2             0xc3d19c71  
--------------------------------------------------
Control
  Input:
  Opcode            0x23        
  Output:
  RegDst            0x0         
  Jump              0x0         
  Branch            0x0         
  MemRead           0x1         
  MemToReg          0x1         
  ALUOp0            0x0         
  ALUOp1            0x0         
  MemWrite          0x0         
  ALUSrc            0x1         
  RegWrite          0x1         
--------------------------------------------------
MUX DestReg
  Input:
  operand0          0xc         
  operand1          0x0         
  control           0x0         
  Output:
  output            0xc         
--------------------------------------------------
ALU CONTROL
  Input:
  aluOp             0x0         
  func              0x0         
  Output:
  output            0x2         
--------------------------------------------------
MUX ALUSrc
  Input:
  operand0          0xc3d19c71  
  operand1          0x0         
  control           0x1         
  Output:
  output            0x0         
--------------------------------------------------
ALU Main
  Input:
  operand0          0x10000190  
  operand1          0x0         
  control           0x2         
  Output:
  result            0x10000190  
  zero              0x0         
Error: out_of_range
DataMemory: address out of bound :0x10000190
