#ifndef CLOCK_H_
#define CLOCK_H_

#include "ProcessorComponent.h"

////////////////////////////////////////////////////////////////////////////////
/// @ingroup Processor
/// @brief Clock
///
/// @details
/// Input lines:
///   Input_0 [0]
///   Input_1 [1]
///
/// Output lines:
///   Result  [0]   Input_0 && Input_1
////////////////////////////////////////////////////////////////////////////////
class Clock : public ProcessorComponent
{
  public:

    ////////////////////////////////////////////////////////////////////////////
    /// @name Constants
    /// @{

    static const int NUM_INPUTS = 0;
    static const int NUM_OUTPUTS = 1;

    /// @}
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// @name Constructor/Destructor
    /// @{

    Clock();

    /// @}
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// @name Accessors/Manipulators
    /// @{

    /// @brief Doesn't do anything
    void setInput(int _line_id, bool _bit);

    bool getOutput(int _line_id = 0);

    /// @}
    ////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////
    /// @brief Fires outputs when clock is high
    ////////////////////////////////////////////////////////////////////////////
    void tick();

  private:
    bool m_clock_state;  ///< Can be high or low
};

#endif // CLOCK_H_
